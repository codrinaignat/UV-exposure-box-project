

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Sep 01 21:00:39 2020

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F1507
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0013                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  0116                     	;# 
    71  0117                     	;# 
    72  011D                     	;# 
    73  018C                     	;# 
    74  018D                     	;# 
    75  018E                     	;# 
    76  0191                     	;# 
    77  0191                     	;# 
    78  0192                     	;# 
    79  0193                     	;# 
    80  0193                     	;# 
    81  0194                     	;# 
    82  0195                     	;# 
    83  0196                     	;# 
    84  0197                     	;# 
    85  020C                     	;# 
    86  020D                     	;# 
    87  0391                     	;# 
    88  0392                     	;# 
    89  0393                     	;# 
    90  0394                     	;# 
    91  0395                     	;# 
    92  0396                     	;# 
    93  0498                     	;# 
    94  0498                     	;# 
    95  0499                     	;# 
    96  049A                     	;# 
    97  049B                     	;# 
    98  049B                     	;# 
    99  049C                     	;# 
   100  049E                     	;# 
   101  049F                     	;# 
   102  0611                     	;# 
   103  0612                     	;# 
   104  0613                     	;# 
   105  0613                     	;# 
   106  0614                     	;# 
   107  0615                     	;# 
   108  0616                     	;# 
   109  0616                     	;# 
   110  0617                     	;# 
   111  0618                     	;# 
   112  0619                     	;# 
   113  0619                     	;# 
   114  061A                     	;# 
   115  061B                     	;# 
   116  061C                     	;# 
   117  061C                     	;# 
   118  0691                     	;# 
   119  0692                     	;# 
   120  0693                     	;# 
   121  0694                     	;# 
   122  0695                     	;# 
   123  0F0F                     	;# 
   124  0F10                     	;# 
   125  0F11                     	;# 
   126  0F12                     	;# 
   127  0F13                     	;# 
   128  0F14                     	;# 
   129  0F15                     	;# 
   130  0F16                     	;# 
   131  0F17                     	;# 
   132  0F18                     	;# 
   133  0F19                     	;# 
   134  0F1A                     	;# 
   135  0F1B                     	;# 
   136  0F1C                     	;# 
   137  0F1D                     	;# 
   138  0F1E                     	;# 
   139  0F1F                     	;# 
   140  0FE3                     	;# 
   141  0FE4                     	;# 
   142  0FE5                     	;# 
   143  0FE6                     	;# 
   144  0FE7                     	;# 
   145  0FE8                     	;# 
   146  0FE9                     	;# 
   147  0FEA                     	;# 
   148  0FEB                     	;# 
   149  0FED                     	;# 
   150  0FEE                     	;# 
   151  0FEF                     	;# 
   152                           
   153                           	psect	strings
   154  0002                     __pstrings:	
   155  0002                     __stringtab:	
   156  0002  3400               	retlw	0
   157  0003                     __end_of__stringtab:	
   158  0003                     itoa@digit:	
   159  0003  3430               	retlw	48
   160  0004  3431               	retlw	49
   161  0005  3432               	retlw	50
   162  0006  3433               	retlw	51
   163  0007  3434               	retlw	52
   164  0008  3435               	retlw	53
   165  0009  3436               	retlw	54
   166  000A  3437               	retlw	55
   167  000B  3438               	retlw	56
   168  000C  3439               	retlw	57
   169  000D                     __end_ofitoa@digit:	
   170  000C                     _PORTAbits	set	12
   171  000D                     _PORTBbits	set	13
   172  000E                     _PORTCbits	set	14
   173  0099                     _OSCCON	set	153
   174  008C                     _TRISA	set	140
   175  008D                     _TRISB	set	141
   176  008E                     _TRISCbits	set	142
   177  018C                     _ANSELA	set	396
   178  018D                     _ANSELB	set	397
   179  018E                     _ANSELC	set	398
   180  000D                     __stringdata:	
   181  000D                     STR_10:	
   182  000D  3441               	retlw	65	;'A'
   183  000E  3474               	retlw	116	;'t'
   184  000F  3420               	retlw	32	;' '
   185  0010  346C               	retlw	108	;'l'
   186  0011  3465               	retlw	101	;'e'
   187  0012  3461               	retlw	97	;'a'
   188  0013  3473               	retlw	115	;'s'
   189  0014  3474               	retlw	116	;'t'
   190  0015  3420               	retlw	32	;' '
   191  0016  3431               	retlw	49	;'1'
   192  0017  3430               	retlw	48	;'0'
   193  0018  3420               	retlw	32	;' '
   194  0019  3473               	retlw	115	;'s'
   195  001A  3465               	retlw	101	;'e'
   196  001B  3463               	retlw	99	;'c'
   197  001C  342E               	retlw	46	;'.'
   198  001D  3400               	retlw	0
   199  001E                     STR_14:	
   200  001E  3445               	retlw	69	;'E'
   201  001F  3478               	retlw	120	;'x'
   202  0020  3470               	retlw	112	;'p'
   203  0021  346F               	retlw	111	;'o'
   204  0022  3473               	retlw	115	;'s'
   205  0023  3475               	retlw	117	;'u'
   206  0024  3472               	retlw	114	;'r'
   207  0025  3465               	retlw	101	;'e'
   208  0026  3420               	retlw	32	;' '
   209  0027  3473               	retlw	115	;'s'
   210  0028  3474               	retlw	116	;'t'
   211  0029  346F               	retlw	111	;'o'
   212  002A  3470               	retlw	112	;'p'
   213  002B  3470               	retlw	112	;'p'
   214  002C  3465               	retlw	101	;'e'
   215  002D  3464               	retlw	100	;'d'
   216  002E  3400               	retlw	0
   217  002F                     STR_11:	
   218  002F  3445               	retlw	69	;'E'
   219  0030  3478               	retlw	120	;'x'
   220  0031  3470               	retlw	112	;'p'
   221  0032  346F               	retlw	111	;'o'
   222  0033  3473               	retlw	115	;'s'
   223  0034  3475               	retlw	117	;'u'
   224  0035  3472               	retlw	114	;'r'
   225  0036  3465               	retlw	101	;'e'
   226  0037  3420               	retlw	32	;' '
   227  0038  3473               	retlw	115	;'s'
   228  0039  3474               	retlw	116	;'t'
   229  003A  3461               	retlw	97	;'a'
   230  003B  3472               	retlw	114	;'r'
   231  003C  3474               	retlw	116	;'t'
   232  003D  3465               	retlw	101	;'e'
   233  003E  3464               	retlw	100	;'d'
   234  003F  3400               	retlw	0
   235  0040                     STR_12:	
   236  0040  3445               	retlw	69	;'E'
   237  0041  3478               	retlw	120	;'x'
   238  0042  3470               	retlw	112	;'p'
   239  0043  346F               	retlw	111	;'o'
   240  0044  3473               	retlw	115	;'s'
   241  0045  3475               	retlw	117	;'u'
   242  0046  3472               	retlw	114	;'r'
   243  0047  3465               	retlw	101	;'e'
   244  0048  3420               	retlw	32	;' '
   245  0049  3464               	retlw	100	;'d'
   246  004A  346F               	retlw	111	;'o'
   247  004B  346E               	retlw	110	;'n'
   248  004C  3465               	retlw	101	;'e'
   249  004D  3421               	retlw	33	;'!'
   250  004E  3400               	retlw	0
   251  004F                     STR_3:	
   252  004F  3442               	retlw	66	;'B'
   253  0050  346F               	retlw	111	;'o'
   254  0051  346F               	retlw	111	;'o'
   255  0052  3474               	retlw	116	;'t'
   256  0053  3469               	retlw	105	;'i'
   257  0054  346E               	retlw	110	;'n'
   258  0055  3467               	retlw	103	;'g'
   259  0056  342E               	retlw	46	;'.'
   260  0057  342E               	retlw	46	;'.'
   261  0058  342E               	retlw	46	;'.'
   262  0059  3400               	retlw	0
   263  005A                     STR_8:	
   264  005A  3454               	retlw	84	;'T'
   265  005B  346F               	retlw	111	;'o'
   266  005C  346F               	retlw	111	;'o'
   267  005D  3420               	retlw	32	;' '
   268  005E  346C               	retlw	108	;'l'
   269  005F  346F               	retlw	111	;'o'
   270  0060  3477               	retlw	119	;'w'
   271  0061  3421               	retlw	33	;'!'
   272  0062  3421               	retlw	33	;'!'
   273  0063  3400               	retlw	0
   274  0064                     STR_2:	
   275  0064  3442               	retlw	66	;'B'
   276  0065  346F               	retlw	111	;'o'
   277  0066  346F               	retlw	111	;'o'
   278  0067  3474               	retlw	116	;'t'
   279  0068  3469               	retlw	105	;'i'
   280  0069  346E               	retlw	110	;'n'
   281  006A  3467               	retlw	103	;'g'
   282  006B  342E               	retlw	46	;'.'
   283  006C  342E               	retlw	46	;'.'
   284  006D  3400               	retlw	0
   285  006E                     STR_13:	
   286  006E  3472               	retlw	114	;'r'
   287  006F  3465               	retlw	101	;'e'
   288  0070  346D               	retlw	109	;'m'
   289  0071  3461               	retlw	97	;'a'
   290  0072  3469               	retlw	105	;'i'
   291  0073  346E               	retlw	110	;'n'
   292  0074  3469               	retlw	105	;'i'
   293  0075  346E               	retlw	110	;'n'
   294  0076  3467               	retlw	103	;'g'
   295  0077  3400               	retlw	0
   296  0078                     STR_6:	
   297  0078  344D               	retlw	77	;'M'
   298  0079  3461               	retlw	97	;'a'
   299  007A  3478               	retlw	120	;'x'
   300  007B  3469               	retlw	105	;'i'
   301  007C  346D               	retlw	109	;'m'
   302  007D  3475               	retlw	117	;'u'
   303  007E  346D               	retlw	109	;'m'
   304  007F  3421               	retlw	33	;'!'
   305  0080  3400               	retlw	0
   306  0081                     STR_1:	
   307  0081  3442               	retlw	66	;'B'
   308  0082  346F               	retlw	111	;'o'
   309  0083  346F               	retlw	111	;'o'
   310  0084  3474               	retlw	116	;'t'
   311  0085  3469               	retlw	105	;'i'
   312  0086  346E               	retlw	110	;'n'
   313  0087  3467               	retlw	103	;'g'
   314  0088  342E               	retlw	46	;'.'
   315  0089  3400               	retlw	0
   316  008A                     STR_5:	
   317  008A  3473               	retlw	115	;'s'
   318  008B  3465               	retlw	101	;'e'
   319  008C  3463               	retlw	99	;'c'
   320  008D  346F               	retlw	111	;'o'
   321  008E  346E               	retlw	110	;'n'
   322  008F  3464               	retlw	100	;'d'
   323  0090  3473               	retlw	115	;'s'
   324  0091  3400               	retlw	0
   325  0092                     __end_of__stringdata:	
   326                           
   327                           ; #config settings
   328  0000                     
   329                           	psect	cinit
   330  07F7                     start_initialization:	
   331  07F7                     __initialization:	
   332                           
   333                           ; Clear objects allocated to BANK0
   334  07F7  01AD               	clrf	__pbssBANK0& (0+127)
   335  07F8  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   336  07F9  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   337  07FA  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   338  07FB  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   339  07FC  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   340  07FD  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   341  07FE                     end_of_initialization:	
   342                           ;End of C runtime variable initialization code
   343                           
   344  07FE                     __end_of__initialization:	
   345  07FE  0020               	movlb	0
   346  07FF  2E5C               	ljmp	_main	;jump to C main() function
   347                           
   348                           	psect	bssBANK0
   349  002D                     __pbssBANK0:	
   350  002D                     _check:	
   351  002D                     	ds	2
   352  002F                     _contor:	
   353  002F                     	ds	2
   354  0031                     _Buffer:	
   355  0031                     	ds	3
   356                           
   357                           	psect	cstackCOMMON
   358  0070                     __pcstackCOMMON:	
   359  0070                     ?_Lcd_SetBit:	
   360  0070                     ??_Lcd_SetBit:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ?_Lcd_Cmd:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ?_Lcd_Clear:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_Lcd_Start:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_Lcd_Print_Char:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_Lcd_Print_String:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_initializing:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?_main:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?___awdiv:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ?___awmod:	
   388                           ; 2 bytes @ 0x0
   389                           
   390  0070                     ?___wmul:	
   391                           ; 2 bytes @ 0x0
   392                           
   393  0070                     Lcd_SetBit@data_bit:	
   394                           ; 2 bytes @ 0x0
   395                           
   396  0070                     ___awdiv@divisor:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ___awmod@divisor:	
   400                           ; 2 bytes @ 0x0
   401                           
   402  0070                     ___wmul@multiplier:	
   403                           ; 2 bytes @ 0x0
   404                           
   405                           
   406                           ; 2 bytes @ 0x0
   407  0070                     	ds	1
   408  0071                     ??_Lcd_Cmd:	
   409  0071                     ??_Lcd_Print_Char:	
   410                           ; 0 bytes @ 0x1
   411                           
   412                           
   413                           ; 0 bytes @ 0x1
   414  0071                     	ds	1
   415  0072                     Lcd_Print_Char@Lower_Nibble:	
   416  0072                     ___awdiv@dividend:	
   417                           ; 1 bytes @ 0x2
   418                           
   419  0072                     ___awmod@dividend:	
   420                           ; 2 bytes @ 0x2
   421                           
   422  0072                     ___wmul@multiplicand:	
   423                           ; 2 bytes @ 0x2
   424                           
   425                           
   426                           ; 2 bytes @ 0x2
   427  0072                     	ds	1
   428  0073                     Lcd_Cmd@a:	
   429  0073                     Lcd_Print_Char@Upper_Nibble:	
   430                           ; 1 bytes @ 0x3
   431                           
   432                           
   433                           ; 1 bytes @ 0x3
   434  0073                     	ds	1
   435  0074                     ??_Lcd_Clear:	
   436  0074                     ?_Lcd_Set_Cursor:	
   437                           ; 0 bytes @ 0x4
   438                           
   439  0074                     ??_Lcd_Start:	
   440                           ; 0 bytes @ 0x4
   441                           
   442  0074                     ??___awdiv:	
   443                           ; 0 bytes @ 0x4
   444                           
   445  0074                     ??___awmod:	
   446                           ; 0 bytes @ 0x4
   447                           
   448  0074                     ??___wmul:	
   449                           ; 0 bytes @ 0x4
   450                           
   451  0074                     Lcd_Set_Cursor@b:	
   452                           ; 0 bytes @ 0x4
   453                           
   454  0074                     Lcd_Print_Char@data:	
   455                           ; 1 bytes @ 0x4
   456                           
   457  0074                     ___wmul@product:	
   458                           ; 1 bytes @ 0x4
   459                           
   460                           
   461                           ; 2 bytes @ 0x4
   462  0074                     	ds	1
   463  0075                     ??_Lcd_Set_Cursor:	
   464  0075                     ___awdiv@counter:	
   465                           ; 0 bytes @ 0x5
   466                           
   467  0075                     ___awmod@counter:	
   468                           ; 1 bytes @ 0x5
   469                           
   470  0075                     Lcd_Print_Char@i:	
   471                           ; 1 bytes @ 0x5
   472                           
   473                           
   474                           ; 2 bytes @ 0x5
   475  0075                     	ds	1
   476  0076                     ___awdiv@sign:	
   477  0076                     ___awmod@sign:	
   478                           ; 1 bytes @ 0x6
   479                           
   480  0076                     Lcd_Start@i:	
   481                           ; 1 bytes @ 0x6
   482                           
   483                           
   484                           ; 2 bytes @ 0x6
   485  0076                     	ds	1
   486  0077                     ??_Lcd_Print_String:	
   487  0077                     Lcd_Set_Cursor@a:	
   488                           ; 0 bytes @ 0x7
   489                           
   490  0077                     Lcd_Print_String@i:	
   491                           ; 1 bytes @ 0x7
   492                           
   493  0077                     ___awdiv@quotient:	
   494                           ; 2 bytes @ 0x7
   495                           
   496                           
   497                           ; 2 bytes @ 0x7
   498  0077                     	ds	1
   499  0078                     Lcd_Set_Cursor@z:	
   500                           
   501                           ; 1 bytes @ 0x8
   502  0078                     	ds	1
   503  0079                     ?_itoa:	
   504  0079                     Lcd_Set_Cursor@y:	
   505                           ; 1 bytes @ 0x9
   506                           
   507  0079                     Lcd_Print_String@a:	
   508                           ; 1 bytes @ 0x9
   509                           
   510  0079                     itoa@i:	
   511                           ; 1 bytes @ 0x9
   512                           
   513                           
   514                           ; 2 bytes @ 0x9
   515  0079                     	ds	1
   516  007A                     Lcd_Set_Cursor@temp:	
   517                           
   518                           ; 1 bytes @ 0xA
   519  007A                     	ds	1
   520  007B                     itoa@b:	
   521                           
   522                           ; 1 bytes @ 0xB
   523  007B                     	ds	1
   524  007C                     ??_itoa:	
   525                           
   526                           ; 0 bytes @ 0xC
   527  007C                     	ds	1
   528                           
   529                           	psect	cstackBANK0
   530  0020                     __pcstackBANK0:	
   531  0020                     itoa@shifter:	
   532                           
   533                           ; 2 bytes @ 0x0
   534  0020                     	ds	2
   535  0022                     itoa@p:	
   536                           
   537                           ; 1 bytes @ 0x2
   538  0022                     	ds	1
   539  0023                     ??_initializing:	
   540                           
   541                           ; 0 bytes @ 0x3
   542  0023                     	ds	3
   543  0026                     initializing@j:	
   544                           
   545                           ; 2 bytes @ 0x6
   546  0026                     	ds	2
   547  0028                     ??_main:	
   548                           
   549                           ; 0 bytes @ 0x8
   550  0028                     	ds	3
   551  002B                     main@j:	
   552                           
   553                           ; 2 bytes @ 0xB
   554  002B                     	ds	2
   555                           
   556                           	psect	maintext
   557  065C                     __pmaintext:	
   558 ;;
   559 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   560 ;;
   561 ;; *************** function _main *****************
   562 ;; Defined at:
   563 ;;		line 173 in file "newmain.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  j               2   11[BANK0 ] int 
   568 ;; Return value:  Size  Location     Type
   569 ;;		None               void
   570 ;; Registers used:
   571 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 17F/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1
   577 ;;      Params:         0       0       0
   578 ;;      Locals:         0       2       0
   579 ;;      Temps:          0       3       0
   580 ;;      Totals:         0       5       0
   581 ;;Total ram usage:        5 bytes
   582 ;; Hardware stack levels required when called:    4
   583 ;; This function calls:
   584 ;;		_Lcd_Clear
   585 ;;		_Lcd_Print_Char
   586 ;;		_Lcd_Print_String
   587 ;;		_Lcd_Set_Cursor
   588 ;;		_Lcd_Start
   589 ;;		_initializing
   590 ;;		_itoa
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _main
   598  065C                     _main:	
   599                           
   600                           ;newmain.c: 174: OSCCON = 0b01110010;
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstack]
   604  065C  3072               	movlw	114
   605  065D  0021               	movlb	1	; select bank1
   606  065E  0099               	movwf	25	;volatile
   607                           
   608                           ;newmain.c: 175: TRISA = 0;
   609  065F  018C               	clrf	12	;volatile
   610                           
   611                           ;newmain.c: 176: TRISB = 0;
   612  0660  018D               	clrf	13	;volatile
   613                           
   614                           ;newmain.c: 177: TRISCbits.TRISC3 = 0;
   615  0661  118E               	bcf	14,3	;volatile
   616                           
   617                           ;newmain.c: 178: TRISCbits.TRISC4 = 0;
   618  0662  120E               	bcf	14,4	;volatile
   619                           
   620                           ;newmain.c: 179: TRISCbits.TRISC5 = 0;
   621  0663  128E               	bcf	14,5	;volatile
   622                           
   623                           ;newmain.c: 180: TRISCbits.TRISC1 = 1;
   624  0664  148E               	bsf	14,1	;volatile
   625                           
   626                           ;newmain.c: 181: TRISCbits.TRISC2 = 1;
   627  0665  150E               	bsf	14,2	;volatile
   628                           
   629                           ;newmain.c: 182: TRISCbits.TRISC6 = 1;
   630  0666  170E               	bsf	14,6	;volatile
   631                           
   632                           ;newmain.c: 183: TRISCbits.TRISC7 = 1;
   633  0667  178E               	bsf	14,7	;volatile
   634                           
   635                           ;newmain.c: 184: PORTCbits.RC3=0;
   636  0668  0020               	movlb	0	; select bank0
   637  0669  118E               	bcf	14,3	;volatile
   638                           
   639                           ;newmain.c: 185: ANSELA = 0;
   640  066A  0023               	movlb	3	; select bank3
   641  066B  018C               	clrf	12	;volatile
   642                           
   643                           ;newmain.c: 186: ANSELB = 0;
   644  066C  018D               	clrf	13	;volatile
   645                           
   646                           ;newmain.c: 187: ANSELC = 0;
   647  066D  018E               	clrf	14	;volatile
   648                           
   649                           ;newmain.c: 188: initializing();
   650  066E  25C3               	fcall	_initializing
   651  066F                     l1540:	
   652                           ;newmain.c: 192: while (contor < 300) {
   653                           
   654                           ;newmain.c: 189: int j;
   655                           ;newmain.c: 190: while (1) {
   656                           
   657  066F  0020               	movlb	0	; select bank0
   658  0670  0830               	movf	_contor+1,w
   659  0671  3A80               	xorlw	128
   660  0672  00FF               	movwf	127
   661  0673  3081               	movlw	129
   662  0674  027F               	subwf	127,w
   663  0675  1D03               	skipz
   664  0676  2E79               	goto	u1225
   665  0677  302C               	movlw	44
   666  0678  022F               	subwf	_contor,w
   667  0679                     u1225:	
   668  0679  1803               	btfsc	3,0
   669  067A  2E6F               	goto	l1540
   670                           
   671                           ;newmain.c: 193: if (PORTCbits.RC1 == 0) {
   672  067B  0020               	movlb	0	; select bank0
   673  067C  188E               	btfsc	14,1	;volatile
   674  067D  2EE2               	goto	l1424
   675                           
   676                           ;newmain.c: 194: Lcd_Clear();
   677  067E  236D               	fcall	_Lcd_Clear
   678                           
   679                           ;newmain.c: 195: if (contor == 299)
   680  067F  3001               	movlw	1
   681  0680  0020               	movlb	0	; select bank0
   682  0681  0630               	xorwf	_contor+1,w
   683  0682  1D03               	skipz
   684  0683  2E86               	goto	u1075
   685  0684  302B               	movlw	43
   686  0685  062F               	xorwf	_contor,w
   687  0686                     u1075:	
   688  0686  1D03               	skipz
   689  0687  2E91               	goto	l1394
   690                           
   691                           ;newmain.c: 196: {
   692                           ;newmain.c: 197: Lcd_Start();
   693  0688  2453               	fcall	_Lcd_Start
   694                           
   695                           ;newmain.c: 198: Lcd_Clear();
   696  0689  236D               	fcall	_Lcd_Clear
   697                           
   698                           ;newmain.c: 199: Lcd_Set_Cursor(1, 1);
   699  068A  01F4               	clrf	Lcd_Set_Cursor@b
   700  068B  0AF4               	incf	Lcd_Set_Cursor@b,f
   701  068C  3001               	movlw	1
   702  068D  23CF               	fcall	_Lcd_Set_Cursor
   703                           
   704                           ;newmain.c: 200: Lcd_Print_String("Maximum!");
   705  068E  3078               	movlw	(STR_6| (0+32768))& (0+255)
   706  068F  2384               	fcall	_Lcd_Print_String
   707                           
   708                           ;newmain.c: 201: }
   709  0690  2EE2               	goto	l1424
   710  0691                     l1394:	
   711                           
   712                           ;newmain.c: 202: else
   713                           ;newmain.c: 203: {
   714                           ;newmain.c: 204: Lcd_Clear();
   715  0691  236D               	fcall	_Lcd_Clear
   716                           
   717                           ;newmain.c: 205: contor = contor + 1;
   718  0692  0020               	movlb	0	; select bank0
   719  0693  082F               	movf	_contor,w
   720  0694  3E01               	addlw	1
   721  0695  00AF               	movwf	_contor
   722  0696  3000               	movlw	0
   723  0697  3D30               	addwfc	_contor+1,w
   724  0698  00B0               	movwf	_contor+1
   725                           
   726                           ;newmain.c: 206: itoa(contor, Buffer);
   727  0699  0830               	movf	_contor+1,w
   728  069A  01FA               	clrf	itoa@i+1
   729  069B  07FA               	addwf	itoa@i+1,f
   730  069C  082F               	movf	_contor,w
   731  069D  01F9               	clrf	itoa@i
   732  069E  07F9               	addwf	itoa@i,f
   733  069F  3031               	movlw	_Buffer& (0+255)
   734  06A0  00A8               	movwf	??_main
   735  06A1  0828               	movf	??_main,w
   736  06A2  00FB               	movwf	itoa@b
   737  06A3  254C               	fcall	_itoa
   738                           
   739                           ;newmain.c: 208: Lcd_Start();
   740  06A4  2453               	fcall	_Lcd_Start
   741                           
   742                           ;newmain.c: 209: Lcd_Clear();
   743  06A5  236D               	fcall	_Lcd_Clear
   744                           
   745                           ;newmain.c: 210: Lcd_Set_Cursor(1, 1);
   746  06A6  01F4               	clrf	Lcd_Set_Cursor@b
   747  06A7  0AF4               	incf	Lcd_Set_Cursor@b,f
   748  06A8  3001               	movlw	1
   749  06A9  23CF               	fcall	_Lcd_Set_Cursor
   750                           
   751                           ;newmain.c: 211: for (j = 0; j < 3; j++) {
   752  06AA  0020               	movlb	0	; select bank0
   753  06AB  01AB               	clrf	main@j
   754  06AC  01AC               	clrf	main@j+1
   755  06AD  082C               	movf	main@j+1,w
   756  06AE  3A80               	xorlw	128
   757  06AF  00FF               	movwf	127
   758  06B0  3080               	movlw	128
   759  06B1  027F               	subwf	127,w
   760  06B2  1D03               	skipz
   761  06B3  2EB6               	goto	u1085
   762  06B4  3003               	movlw	3
   763  06B5  022B               	subwf	main@j,w
   764  06B6                     u1085:	
   765  06B6  1803               	btfsc	3,0
   766  06B7  2ECF               	goto	l1418
   767  06B8                     l1412:	
   768                           
   769                           ;newmain.c: 212: Lcd_Print_Char(Buffer[j]);
   770  06B8  0020               	movlb	0	; select bank0
   771  06B9  082B               	movf	main@j,w
   772  06BA  3E31               	addlw	_Buffer& (0+255)
   773  06BB  0086               	movwf	6
   774  06BC  0187               	clrf	7
   775  06BD  0801               	movf	1,w
   776  06BE  24EE               	fcall	_Lcd_Print_Char
   777  06BF  3001               	movlw	1
   778  06C0  0020               	movlb	0	; select bank0
   779  06C1  07AB               	addwf	main@j,f
   780  06C2  3000               	movlw	0
   781  06C3  3DAC               	addwfc	main@j+1,f
   782  06C4  082C               	movf	main@j+1,w
   783  06C5  3A80               	xorlw	128
   784  06C6  00FF               	movwf	127
   785  06C7  3080               	movlw	128
   786  06C8  027F               	subwf	127,w
   787  06C9  1D03               	skipz
   788  06CA  2ECD               	goto	u1095
   789  06CB  3003               	movlw	3
   790  06CC  022B               	subwf	main@j,w
   791  06CD                     u1095:	
   792  06CD  1C03               	skipc
   793  06CE  2EB8               	goto	l1412
   794  06CF                     l1418:	
   795                           
   796                           ;newmain.c: 213: }
   797                           ;newmain.c: 214: Lcd_Set_Cursor(1, 5);
   798  06CF  3005               	movlw	5
   799  06D0  0020               	movlb	0	; select bank0
   800  06D1  00A8               	movwf	??_main
   801  06D2  0828               	movf	??_main,w
   802  06D3  00F4               	movwf	Lcd_Set_Cursor@b
   803  06D4  3001               	movlw	1
   804  06D5  23CF               	fcall	_Lcd_Set_Cursor
   805                           
   806                           ;newmain.c: 215: Lcd_Print_String("seconds");
   807  06D6  308A               	movlw	(STR_5| (0+32768))& (0+255)
   808  06D7  2384               	fcall	_Lcd_Print_String
   809                           
   810                           ;newmain.c: 216: _delay((unsigned long)((30)*(10000000/4000.0)));
   811  06D8  3062               	movlw	98
   812  06D9  0020               	movlb	0	; select bank0
   813  06DA  00A9               	movwf	??_main+1
   814  06DB  3065               	movlw	101
   815  06DC  00A8               	movwf	??_main
   816  06DD                     u1237:	
   817  06DD  0BA8               	decfsz	??_main,f
   818  06DE  2EDD               	goto	u1237
   819  06DF  0BA9               	decfsz	??_main+1,f
   820  06E0  2EDD               	goto	u1237
   821  06E1  2EE2               	nop2
   822  06E2                     l1424:	
   823                           
   824                           ;newmain.c: 218: }
   825                           ;newmain.c: 219: }
   826                           ;newmain.c: 220: if (PORTCbits.RC2 == 0) {
   827  06E2  0020               	movlb	0	; select bank0
   828  06E3  190E               	btfsc	14,2	;volatile
   829  06E4  2F44               	goto	l1464
   830                           
   831                           ;newmain.c: 221: Lcd_Clear();
   832  06E5  236D               	fcall	_Lcd_Clear
   833                           
   834                           ;newmain.c: 222: if (contor == 0)
   835  06E6  0020               	movlb	0	; select bank0
   836  06E7  0830               	movf	_contor+1,w
   837  06E8  042F               	iorwf	_contor,w
   838  06E9  1D03               	skipz
   839  06EA  2EF4               	goto	l1436
   840                           
   841                           ;newmain.c: 223: {
   842                           ;newmain.c: 224: Lcd_Start();
   843  06EB  2453               	fcall	_Lcd_Start
   844                           
   845                           ;newmain.c: 225: Lcd_Clear();
   846  06EC  236D               	fcall	_Lcd_Clear
   847                           
   848                           ;newmain.c: 226: Lcd_Set_Cursor(1, 1);
   849  06ED  01F4               	clrf	Lcd_Set_Cursor@b
   850  06EE  0AF4               	incf	Lcd_Set_Cursor@b,f
   851  06EF  3001               	movlw	1
   852  06F0  23CF               	fcall	_Lcd_Set_Cursor
   853                           
   854                           ;newmain.c: 227: Lcd_Print_String("Too low!!");
   855  06F1  305A               	movlw	(STR_8| (0+32768))& (0+255)
   856  06F2  2384               	fcall	_Lcd_Print_String
   857                           
   858                           ;newmain.c: 228: }
   859  06F3  2F44               	goto	l1464
   860  06F4                     l1436:	
   861                           
   862                           ;newmain.c: 229: else
   863                           ;newmain.c: 230: {
   864                           ;newmain.c: 231: contor = contor - 1;
   865  06F4  0020               	movlb	0	; select bank0
   866  06F5  082F               	movf	_contor,w
   867  06F6  3EFF               	addlw	255
   868  06F7  00AF               	movwf	_contor
   869  06F8  30FF               	movlw	255
   870  06F9  3D30               	addwfc	_contor+1,w
   871  06FA  00B0               	movwf	_contor+1
   872                           
   873                           ;newmain.c: 232: itoa(contor, Buffer);
   874  06FB  0830               	movf	_contor+1,w
   875  06FC  01FA               	clrf	itoa@i+1
   876  06FD  07FA               	addwf	itoa@i+1,f
   877  06FE  082F               	movf	_contor,w
   878  06FF  01F9               	clrf	itoa@i
   879  0700  07F9               	addwf	itoa@i,f
   880  0701  3031               	movlw	_Buffer& (0+255)
   881  0702  00A8               	movwf	??_main
   882  0703  0828               	movf	??_main,w
   883  0704  00FB               	movwf	itoa@b
   884  0705  254C               	fcall	_itoa
   885                           
   886                           ;newmain.c: 233: Lcd_Start();
   887  0706  2453               	fcall	_Lcd_Start
   888                           
   889                           ;newmain.c: 234: Lcd_Clear();
   890  0707  236D               	fcall	_Lcd_Clear
   891                           
   892                           ;newmain.c: 235: Lcd_Set_Cursor(1, 1);
   893  0708  01F4               	clrf	Lcd_Set_Cursor@b
   894  0709  0AF4               	incf	Lcd_Set_Cursor@b,f
   895  070A  3001               	movlw	1
   896  070B  23CF               	fcall	_Lcd_Set_Cursor
   897                           
   898                           ;newmain.c: 236: for (j = 0; j < 3; j++) {
   899  070C  0020               	movlb	0	; select bank0
   900  070D  01AB               	clrf	main@j
   901  070E  01AC               	clrf	main@j+1
   902  070F  082C               	movf	main@j+1,w
   903  0710  3A80               	xorlw	128
   904  0711  00FF               	movwf	127
   905  0712  3080               	movlw	128
   906  0713  027F               	subwf	127,w
   907  0714  1D03               	skipz
   908  0715  2F18               	goto	u1125
   909  0716  3003               	movlw	3
   910  0717  022B               	subwf	main@j,w
   911  0718                     u1125:	
   912  0718  1803               	btfsc	3,0
   913  0719  2F31               	goto	l1458
   914  071A                     l1452:	
   915                           
   916                           ;newmain.c: 237: Lcd_Print_Char(Buffer[j]);
   917  071A  0020               	movlb	0	; select bank0
   918  071B  082B               	movf	main@j,w
   919  071C  3E31               	addlw	_Buffer& (0+255)
   920  071D  0086               	movwf	6
   921  071E  0187               	clrf	7
   922  071F  0801               	movf	1,w
   923  0720  24EE               	fcall	_Lcd_Print_Char
   924  0721  3001               	movlw	1
   925  0722  0020               	movlb	0	; select bank0
   926  0723  07AB               	addwf	main@j,f
   927  0724  3000               	movlw	0
   928  0725  3DAC               	addwfc	main@j+1,f
   929  0726  082C               	movf	main@j+1,w
   930  0727  3A80               	xorlw	128
   931  0728  00FF               	movwf	127
   932  0729  3080               	movlw	128
   933  072A  027F               	subwf	127,w
   934  072B  1D03               	skipz
   935  072C  2F2F               	goto	u1135
   936  072D  3003               	movlw	3
   937  072E  022B               	subwf	main@j,w
   938  072F                     u1135:	
   939  072F  1C03               	skipc
   940  0730  2F1A               	goto	l1452
   941  0731                     l1458:	
   942                           
   943                           ;newmain.c: 238: }
   944                           ;newmain.c: 239: Lcd_Set_Cursor(1, 5);
   945  0731  3005               	movlw	5
   946  0732  0020               	movlb	0	; select bank0
   947  0733  00A8               	movwf	??_main
   948  0734  0828               	movf	??_main,w
   949  0735  00F4               	movwf	Lcd_Set_Cursor@b
   950  0736  3001               	movlw	1
   951  0737  23CF               	fcall	_Lcd_Set_Cursor
   952                           
   953                           ;newmain.c: 240: Lcd_Print_String("seconds");
   954  0738  308A               	movlw	(STR_5| (0+32768))& (0+255)
   955  0739  2384               	fcall	_Lcd_Print_String
   956                           
   957                           ;newmain.c: 241: _delay((unsigned long)((30)*(10000000/4000.0)));
   958  073A  3062               	movlw	98
   959  073B  0020               	movlb	0	; select bank0
   960  073C  00A9               	movwf	??_main+1
   961  073D  3065               	movlw	101
   962  073E  00A8               	movwf	??_main
   963  073F                     u1247:	
   964  073F  0BA8               	decfsz	??_main,f
   965  0740  2F3F               	goto	u1247
   966  0741  0BA9               	decfsz	??_main+1,f
   967  0742  2F3F               	goto	u1247
   968  0743  2F44               	nop2
   969  0744                     l1464:	
   970                           
   971                           ;newmain.c: 242: }
   972                           ;newmain.c: 243: }
   973                           ;newmain.c: 245: if (PORTCbits.RC7 == 0) {
   974  0744  0020               	movlb	0	; select bank0
   975  0745  1B8E               	btfsc	14,7	;volatile
   976  0746  2E6F               	goto	l1540
   977                           
   978                           ;newmain.c: 246: Lcd_Clear();
   979  0747  236D               	fcall	_Lcd_Clear
   980                           
   981                           ;newmain.c: 247: _delay((unsigned long)((500)*(10000000/4000.0)));
   982  0748  3007               	movlw	7
   983  0749  0020               	movlb	0	; select bank0
   984  074A  00AA               	movwf	??_main+2
   985  074B  3058               	movlw	88
   986  074C  00A9               	movwf	??_main+1
   987  074D  305E               	movlw	94
   988  074E  00A8               	movwf	??_main
   989  074F                     u1257:	
   990  074F  0BA8               	decfsz	??_main,f
   991  0750  2F4F               	goto	u1257
   992  0751  0BA9               	decfsz	??_main+1,f
   993  0752  2F4F               	goto	u1257
   994  0753  0BAA               	decfsz	??_main+2,f
   995  0754  2F4F               	goto	u1257
   996  0755  2F56               	nop2
   997                           
   998                           ;newmain.c: 248: Lcd_Clear();
   999  0756  236D               	fcall	_Lcd_Clear
  1000                           
  1001                           ;newmain.c: 249: if (contor >=0 && contor <=9 )
  1002  0757  0020               	movlb	0	; select bank0
  1003  0758  1BB0               	btfsc	_contor+1,7
  1004  0759  2F6E               	goto	l1482
  1005  075A  0830               	movf	_contor+1,w
  1006  075B  3A80               	xorlw	128
  1007  075C  00FF               	movwf	127
  1008  075D  3080               	movlw	128
  1009  075E  027F               	subwf	127,w
  1010  075F  1D03               	skipz
  1011  0760  2F63               	goto	u1165
  1012  0761  300A               	movlw	10
  1013  0762  022F               	subwf	_contor,w
  1014  0763                     u1165:	
  1015  0763  1803               	skipnc
  1016  0764  2F6E               	goto	l1482
  1017                           
  1018                           ;newmain.c: 250: {
  1019                           ;newmain.c: 251: Lcd_Start();
  1020  0765  2453               	fcall	_Lcd_Start
  1021                           
  1022                           ;newmain.c: 252: Lcd_Clear();
  1023  0766  236D               	fcall	_Lcd_Clear
  1024                           
  1025                           ;newmain.c: 253: Lcd_Set_Cursor(1, 1);
  1026  0767  01F4               	clrf	Lcd_Set_Cursor@b
  1027  0768  0AF4               	incf	Lcd_Set_Cursor@b,f
  1028  0769  3001               	movlw	1
  1029  076A  23CF               	fcall	_Lcd_Set_Cursor
  1030                           
  1031                           ;newmain.c: 254: Lcd_Print_String("At least 10 sec.");
  1032  076B  300D               	movlw	(STR_10| (0+32768))& (0+255)
  1033  076C  2384               	fcall	_Lcd_Print_String
  1034                           
  1035                           ;newmain.c: 255: }
  1036  076D  2E6F               	goto	l1540
  1037  076E                     l1482:	
  1038                           
  1039                           ;newmain.c: 256: else{
  1040                           ;newmain.c: 257: Lcd_Start();
  1041  076E  2453               	fcall	_Lcd_Start
  1042                           
  1043                           ;newmain.c: 258: Lcd_Clear();
  1044  076F  236D               	fcall	_Lcd_Clear
  1045                           
  1046                           ;newmain.c: 259: Lcd_Set_Cursor(1, 1);
  1047  0770  01F4               	clrf	Lcd_Set_Cursor@b
  1048  0771  0AF4               	incf	Lcd_Set_Cursor@b,f
  1049  0772  3001               	movlw	1
  1050  0773  23CF               	fcall	_Lcd_Set_Cursor
  1051                           
  1052                           ;newmain.c: 260: Lcd_Print_String("Exposure started");
  1053  0774  302F               	movlw	(STR_11| (0+32768))& (0+255)
  1054  0775  2384               	fcall	_Lcd_Print_String
  1055                           
  1056                           ;newmain.c: 261: check=1;
  1057  0776  3001               	movlw	1
  1058  0777  0020               	movlb	0	; select bank0
  1059  0778  00AD               	movwf	_check
  1060  0779  3000               	movlw	0
  1061  077A  00AE               	movwf	_check+1
  1062  077B                     l105:	
  1063                           ;newmain.c: 262: while(check==1)
  1064                           
  1065  077B  3001               	movlw	1
  1066  077C  0020               	movlb	0	; select bank0
  1067  077D  062D               	xorwf	_check,w
  1068  077E  042E               	iorwf	_check+1,w
  1069  077F  1D03               	btfss	3,2
  1070  0780  2E6F               	goto	l1540
  1071                           
  1072                           ;newmain.c: 263: {
  1073                           ;newmain.c: 264: PORTCbits.RC3=1;
  1074  0781  158E               	bsf	14,3	;volatile
  1075                           
  1076                           ;newmain.c: 265: Lcd_Clear();
  1077  0782  236D               	fcall	_Lcd_Clear
  1078                           
  1079                           ;newmain.c: 266: if (contor == 0)
  1080  0783  0020               	movlb	0	; select bank0
  1081  0784  0830               	movf	_contor+1,w
  1082  0785  042F               	iorwf	_contor,w
  1083  0786  1D03               	skipz
  1084  0787  2F96               	goto	l1504
  1085                           
  1086                           ;newmain.c: 267: {
  1087                           ;newmain.c: 268: Lcd_Start();
  1088  0788  2453               	fcall	_Lcd_Start
  1089                           
  1090                           ;newmain.c: 269: Lcd_Clear();
  1091  0789  236D               	fcall	_Lcd_Clear
  1092                           
  1093                           ;newmain.c: 270: PORTCbits.RC3=0;
  1094  078A  0020               	movlb	0	; select bank0
  1095  078B  118E               	bcf	14,3	;volatile
  1096                           
  1097                           ;newmain.c: 271: Lcd_Set_Cursor(1, 1);
  1098  078C  01F4               	clrf	Lcd_Set_Cursor@b
  1099  078D  0AF4               	incf	Lcd_Set_Cursor@b,f
  1100  078E  3001               	movlw	1
  1101  078F  23CF               	fcall	_Lcd_Set_Cursor
  1102                           
  1103                           ;newmain.c: 272: Lcd_Print_String("Exposure done!");
  1104  0790  3040               	movlw	(STR_12| (0+32768))& (0+255)
  1105  0791  2384               	fcall	_Lcd_Print_String
  1106                           
  1107                           ;newmain.c: 273: check=0;
  1108  0792  0020               	movlb	0	; select bank0
  1109  0793  01AD               	clrf	_check
  1110  0794  01AE               	clrf	_check+1
  1111                           
  1112                           ;newmain.c: 274: break;
  1113  0795  2E6F               	goto	l1540
  1114  0796                     l1504:	
  1115                           
  1116                           ;newmain.c: 275: }
  1117                           ;newmain.c: 276: contor = contor - 1;
  1118  0796  082F               	movf	_contor,w
  1119  0797  3EFF               	addlw	255
  1120  0798  00AF               	movwf	_contor
  1121  0799  30FF               	movlw	255
  1122  079A  3D30               	addwfc	_contor+1,w
  1123  079B  00B0               	movwf	_contor+1
  1124                           
  1125                           ;newmain.c: 277: itoa(contor, Buffer);
  1126  079C  0830               	movf	_contor+1,w
  1127  079D  01FA               	clrf	itoa@i+1
  1128  079E  07FA               	addwf	itoa@i+1,f
  1129  079F  082F               	movf	_contor,w
  1130  07A0  01F9               	clrf	itoa@i
  1131  07A1  07F9               	addwf	itoa@i,f
  1132  07A2  3031               	movlw	_Buffer& (0+255)
  1133  07A3  00A8               	movwf	??_main
  1134  07A4  0828               	movf	??_main,w
  1135  07A5  00FB               	movwf	itoa@b
  1136  07A6  254C               	fcall	_itoa
  1137                           
  1138                           ;newmain.c: 278: Lcd_Start();
  1139  07A7  2453               	fcall	_Lcd_Start
  1140                           
  1141                           ;newmain.c: 279: Lcd_Clear();
  1142  07A8  236D               	fcall	_Lcd_Clear
  1143                           
  1144                           ;newmain.c: 280: Lcd_Set_Cursor(1, 1);
  1145  07A9  01F4               	clrf	Lcd_Set_Cursor@b
  1146  07AA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1147  07AB  3001               	movlw	1
  1148  07AC  23CF               	fcall	_Lcd_Set_Cursor
  1149                           
  1150                           ;newmain.c: 281: for (j = 0; j < 3; j++) {
  1151  07AD  0020               	movlb	0	; select bank0
  1152  07AE  01AB               	clrf	main@j
  1153  07AF  01AC               	clrf	main@j+1
  1154  07B0  082C               	movf	main@j+1,w
  1155  07B1  3A80               	xorlw	128
  1156  07B2  00FF               	movwf	127
  1157  07B3  3080               	movlw	128
  1158  07B4  027F               	subwf	127,w
  1159  07B5  1D03               	skipz
  1160  07B6  2FB9               	goto	u1185
  1161  07B7  3003               	movlw	3
  1162  07B8  022B               	subwf	main@j,w
  1163  07B9                     u1185:	
  1164  07B9  1803               	btfsc	3,0
  1165  07BA  2FD2               	goto	l1526
  1166  07BB                     l1520:	
  1167                           
  1168                           ;newmain.c: 282: Lcd_Print_Char(Buffer[j]);
  1169  07BB  0020               	movlb	0	; select bank0
  1170  07BC  082B               	movf	main@j,w
  1171  07BD  3E31               	addlw	_Buffer& (0+255)
  1172  07BE  0086               	movwf	6
  1173  07BF  0187               	clrf	7
  1174  07C0  0801               	movf	1,w
  1175  07C1  24EE               	fcall	_Lcd_Print_Char
  1176  07C2  3001               	movlw	1
  1177  07C3  0020               	movlb	0	; select bank0
  1178  07C4  07AB               	addwf	main@j,f
  1179  07C5  3000               	movlw	0
  1180  07C6  3DAC               	addwfc	main@j+1,f
  1181  07C7  082C               	movf	main@j+1,w
  1182  07C8  3A80               	xorlw	128
  1183  07C9  00FF               	movwf	127
  1184  07CA  3080               	movlw	128
  1185  07CB  027F               	subwf	127,w
  1186  07CC  1D03               	skipz
  1187  07CD  2FD0               	goto	u1195
  1188  07CE  3003               	movlw	3
  1189  07CF  022B               	subwf	main@j,w
  1190  07D0                     u1195:	
  1191  07D0  1C03               	skipc
  1192  07D1  2FBB               	goto	l1520
  1193  07D2                     l1526:	
  1194                           
  1195                           ;newmain.c: 283: }
  1196                           ;newmain.c: 284: Lcd_Set_Cursor(1, 5);
  1197  07D2  3005               	movlw	5
  1198  07D3  0020               	movlb	0	; select bank0
  1199  07D4  00A8               	movwf	??_main
  1200  07D5  0828               	movf	??_main,w
  1201  07D6  00F4               	movwf	Lcd_Set_Cursor@b
  1202  07D7  3001               	movlw	1
  1203  07D8  23CF               	fcall	_Lcd_Set_Cursor
  1204                           
  1205                           ;newmain.c: 285: Lcd_Print_String("remaining");
  1206  07D9  306E               	movlw	(STR_13| (0+32768))& (0+255)
  1207  07DA  2384               	fcall	_Lcd_Print_String
  1208  07DB                     l1536:	
  1209                           ;newmain.c: 286: while(PORTCbits.RC6 == 0)
  1210                           
  1211  07DB  0020               	movlb	0	; select bank0
  1212  07DC  1B0E               	btfsc	14,6	;volatile
  1213  07DD  2FE9               	goto	l1538
  1214                           
  1215                           ;newmain.c: 287: {
  1216                           ;newmain.c: 288: PORTCbits.RC3=0;
  1217  07DE  118E               	bcf	14,3	;volatile
  1218                           
  1219                           ;newmain.c: 289: Lcd_Set_Cursor(1, 1);
  1220  07DF  01F4               	clrf	Lcd_Set_Cursor@b
  1221  07E0  0AF4               	incf	Lcd_Set_Cursor@b,f
  1222  07E1  3001               	movlw	1
  1223  07E2  23CF               	fcall	_Lcd_Set_Cursor
  1224                           
  1225                           ;newmain.c: 290: Lcd_Print_String("Exposure stopped");
  1226  07E3  301E               	movlw	(STR_14| (0+32768))& (0+255)
  1227  07E4  2384               	fcall	_Lcd_Print_String
  1228                           
  1229                           ;newmain.c: 291: check=0;
  1230  07E5  0020               	movlb	0	; select bank0
  1231  07E6  01AD               	clrf	_check
  1232  07E7  01AE               	clrf	_check+1
  1233  07E8  2FDB               	goto	l1536
  1234  07E9                     l1538:	
  1235                           
  1236                           ;newmain.c: 292: }
  1237                           ;newmain.c: 293: _delay((unsigned long)((1000)*(10000000/4000.0)));
  1238  07E9  300D               	movlw	13
  1239  07EA  00AA               	movwf	??_main+2
  1240  07EB  30AF               	movlw	175
  1241  07EC  00A9               	movwf	??_main+1
  1242  07ED  30C1               	movlw	193
  1243  07EE  00A8               	movwf	??_main
  1244  07EF                     u1267:	
  1245  07EF  0BA8               	decfsz	??_main,f
  1246  07F0  2FEF               	goto	u1267
  1247  07F1  0BA9               	decfsz	??_main+1,f
  1248  07F2  2FEF               	goto	u1267
  1249  07F3  0BAA               	decfsz	??_main+2,f
  1250  07F4  2FEF               	goto	u1267
  1251  07F5  0000               	nop
  1252  07F6  2F7B               	goto	l105
  1253  07F7                     __end_of_main:	
  1254                           ;newmain.c: 294: }
  1255                           ;newmain.c: 295: }
  1256                           ;newmain.c: 296: }
  1257                           ;newmain.c: 297: }
  1258                           ;newmain.c: 300: }
  1259                           ;newmain.c: 301: return;
  1260                           
  1261                           
  1262                           	psect	text1
  1263  05C3                     __ptext1:	
  1264 ;; *************** function _initializing *****************
  1265 ;; Defined at:
  1266 ;;		line 142 in file "newmain.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  j               2    6[BANK0 ] int 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;		None               void
  1273 ;; Registers used:
  1274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1
  1280 ;;      Params:         0       0       0
  1281 ;;      Locals:         0       2       0
  1282 ;;      Temps:          0       3       0
  1283 ;;      Totals:         0       5       0
  1284 ;;Total ram usage:        5 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    3
  1287 ;; This function calls:
  1288 ;;		_Lcd_Clear
  1289 ;;		_Lcd_Print_Char
  1290 ;;		_Lcd_Print_String
  1291 ;;		_Lcd_Set_Cursor
  1292 ;;		_Lcd_Start
  1293 ;;		_itoa
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           
  1300                           ;psect for function _initializing
  1301  05C3                     _initializing:	
  1302                           
  1303                           ;newmain.c: 143: Lcd_Start();
  1304                           
  1305                           ;incstack = 0
  1306                           ; Regs used in _initializing: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  1307  05C3  2453               	fcall	_Lcd_Start
  1308                           
  1309                           ;newmain.c: 144: Lcd_Clear();
  1310  05C4  236D               	fcall	_Lcd_Clear
  1311                           
  1312                           ;newmain.c: 145: Lcd_Set_Cursor(1, 1);
  1313  05C5  01F4               	clrf	Lcd_Set_Cursor@b
  1314  05C6  0AF4               	incf	Lcd_Set_Cursor@b,f
  1315  05C7  3001               	movlw	1
  1316  05C8  23CF               	fcall	_Lcd_Set_Cursor
  1317                           
  1318                           ;newmain.c: 146: Lcd_Print_String("Booting.");
  1319  05C9  3081               	movlw	(STR_1| (0+32768))& (0+255)
  1320  05CA  2384               	fcall	_Lcd_Print_String
  1321                           
  1322                           ;newmain.c: 147: _delay((unsigned long)((400)*(10000000/4000.0)));
  1323  05CB  3006               	movlw	6
  1324  05CC  0020               	movlb	0	; select bank0
  1325  05CD  00A5               	movwf	??_initializing+2
  1326  05CE  3013               	movlw	19
  1327  05CF  00A4               	movwf	??_initializing+1
  1328  05D0  30B1               	movlw	177
  1329  05D1  00A3               	movwf	??_initializing
  1330  05D2                     u1277:	
  1331  05D2  0BA3               	decfsz	??_initializing,f
  1332  05D3  2DD2               	goto	u1277
  1333  05D4  0BA4               	decfsz	??_initializing+1,f
  1334  05D5  2DD2               	goto	u1277
  1335  05D6  0BA5               	decfsz	??_initializing+2,f
  1336  05D7  2DD2               	goto	u1277
  1337  05D8  2DD9               	nop2
  1338                           
  1339                           ;newmain.c: 148: Lcd_Start();
  1340  05D9  2453               	fcall	_Lcd_Start
  1341                           
  1342                           ;newmain.c: 149: Lcd_Clear();
  1343  05DA  236D               	fcall	_Lcd_Clear
  1344                           
  1345                           ;newmain.c: 150: Lcd_Set_Cursor(1, 1);
  1346  05DB  01F4               	clrf	Lcd_Set_Cursor@b
  1347  05DC  0AF4               	incf	Lcd_Set_Cursor@b,f
  1348  05DD  3001               	movlw	1
  1349  05DE  23CF               	fcall	_Lcd_Set_Cursor
  1350                           
  1351                           ;newmain.c: 151: Lcd_Print_String("Booting..");
  1352  05DF  3064               	movlw	(STR_2| (0+32768))& (0+255)
  1353  05E0  2384               	fcall	_Lcd_Print_String
  1354                           
  1355                           ;newmain.c: 152: _delay((unsigned long)((400)*(10000000/4000.0)));
  1356  05E1  3006               	movlw	6
  1357  05E2  0020               	movlb	0	; select bank0
  1358  05E3  00A5               	movwf	??_initializing+2
  1359  05E4  3013               	movlw	19
  1360  05E5  00A4               	movwf	??_initializing+1
  1361  05E6  30B1               	movlw	177
  1362  05E7  00A3               	movwf	??_initializing
  1363  05E8                     u1287:	
  1364  05E8  0BA3               	decfsz	??_initializing,f
  1365  05E9  2DE8               	goto	u1287
  1366  05EA  0BA4               	decfsz	??_initializing+1,f
  1367  05EB  2DE8               	goto	u1287
  1368  05EC  0BA5               	decfsz	??_initializing+2,f
  1369  05ED  2DE8               	goto	u1287
  1370  05EE  2DEF               	nop2
  1371                           
  1372                           ;newmain.c: 153: Lcd_Start();
  1373  05EF  2453               	fcall	_Lcd_Start
  1374                           
  1375                           ;newmain.c: 154: Lcd_Clear();
  1376  05F0  236D               	fcall	_Lcd_Clear
  1377                           
  1378                           ;newmain.c: 155: Lcd_Set_Cursor(1, 1);
  1379  05F1  01F4               	clrf	Lcd_Set_Cursor@b
  1380  05F2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1381  05F3  3001               	movlw	1
  1382  05F4  23CF               	fcall	_Lcd_Set_Cursor
  1383                           
  1384                           ;newmain.c: 156: Lcd_Print_String("Booting...");
  1385  05F5  304F               	movlw	(STR_3| (0+32768))& (0+255)
  1386  05F6  2384               	fcall	_Lcd_Print_String
  1387                           
  1388                           ;newmain.c: 157: _delay((unsigned long)((400)*(10000000/4000.0)));
  1389  05F7  3006               	movlw	6
  1390  05F8  0020               	movlb	0	; select bank0
  1391  05F9  00A5               	movwf	??_initializing+2
  1392  05FA  3013               	movlw	19
  1393  05FB  00A4               	movwf	??_initializing+1
  1394  05FC  30B1               	movlw	177
  1395  05FD  00A3               	movwf	??_initializing
  1396  05FE                     u1297:	
  1397  05FE  0BA3               	decfsz	??_initializing,f
  1398  05FF  2DFE               	goto	u1297
  1399  0600  0BA4               	decfsz	??_initializing+1,f
  1400  0601  2DFE               	goto	u1297
  1401  0602  0BA5               	decfsz	??_initializing+2,f
  1402  0603  2DFE               	goto	u1297
  1403  0604  2E05               	nop2
  1404                           
  1405                           ;newmain.c: 158: Lcd_Start();
  1406  0605  2453               	fcall	_Lcd_Start
  1407                           
  1408                           ;newmain.c: 159: Lcd_Clear();
  1409  0606  236D               	fcall	_Lcd_Clear
  1410                           
  1411                           ;newmain.c: 160: Lcd_Set_Cursor(1, 1);
  1412  0607  01F4               	clrf	Lcd_Set_Cursor@b
  1413  0608  0AF4               	incf	Lcd_Set_Cursor@b,f
  1414  0609  3001               	movlw	1
  1415  060A  23CF               	fcall	_Lcd_Set_Cursor
  1416                           
  1417                           ;newmain.c: 161: Lcd_Print_String("Booting...");
  1418  060B  304F               	movlw	(STR_3| (0+32768))& (0+255)
  1419  060C  2384               	fcall	_Lcd_Print_String
  1420                           
  1421                           ;newmain.c: 162: _delay((unsigned long)((400)*(10000000/4000.0)));
  1422  060D  3006               	movlw	6
  1423  060E  0020               	movlb	0	; select bank0
  1424  060F  00A5               	movwf	??_initializing+2
  1425  0610  3013               	movlw	19
  1426  0611  00A4               	movwf	??_initializing+1
  1427  0612  30B1               	movlw	177
  1428  0613  00A3               	movwf	??_initializing
  1429  0614                     u1307:	
  1430  0614  0BA3               	decfsz	??_initializing,f
  1431  0615  2E14               	goto	u1307
  1432  0616  0BA4               	decfsz	??_initializing+1,f
  1433  0617  2E14               	goto	u1307
  1434  0618  0BA5               	decfsz	??_initializing+2,f
  1435  0619  2E14               	goto	u1307
  1436  061A  2E1B               	nop2
  1437                           
  1438                           ;newmain.c: 163: Lcd_Start();
  1439  061B  2453               	fcall	_Lcd_Start
  1440                           
  1441                           ;newmain.c: 164: Lcd_Clear();
  1442  061C  236D               	fcall	_Lcd_Clear
  1443                           
  1444                           ;newmain.c: 165: itoa(contor, Buffer);
  1445  061D  0020               	movlb	0	; select bank0
  1446  061E  0830               	movf	_contor+1,w
  1447  061F  01FA               	clrf	itoa@i+1
  1448  0620  07FA               	addwf	itoa@i+1,f
  1449  0621  082F               	movf	_contor,w
  1450  0622  01F9               	clrf	itoa@i
  1451  0623  07F9               	addwf	itoa@i,f
  1452  0624  3031               	movlw	_Buffer& (0+255)
  1453  0625  00A3               	movwf	??_initializing
  1454  0626  0823               	movf	??_initializing,w
  1455  0627  00FB               	movwf	itoa@b
  1456  0628  254C               	fcall	_itoa
  1457                           
  1458                           ;newmain.c: 166: Lcd_Set_Cursor(1, 1);
  1459  0629  01F4               	clrf	Lcd_Set_Cursor@b
  1460  062A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1461  062B  3001               	movlw	1
  1462  062C  23CF               	fcall	_Lcd_Set_Cursor
  1463                           
  1464                           ;newmain.c: 167: for (int j = 0; j < 3; j++) {
  1465  062D  0020               	movlb	0	; select bank0
  1466  062E  01A6               	clrf	initializing@j
  1467  062F  01A7               	clrf	initializing@j+1
  1468  0630  0827               	movf	initializing@j+1,w
  1469  0631  3A80               	xorlw	128
  1470  0632  00FF               	movwf	127
  1471  0633  3080               	movlw	128
  1472  0634  027F               	subwf	127,w
  1473  0635  1D03               	skipz
  1474  0636  2E39               	goto	u1045
  1475  0637  3003               	movlw	3
  1476  0638  0226               	subwf	initializing@j,w
  1477  0639                     u1045:	
  1478  0639  1803               	btfsc	3,0
  1479  063A  2E52               	goto	l1350
  1480  063B                     l1344:	
  1481                           
  1482                           ;newmain.c: 168: Lcd_Print_Char(Buffer[j]);
  1483  063B  0020               	movlb	0	; select bank0
  1484  063C  0826               	movf	initializing@j,w
  1485  063D  3E31               	addlw	_Buffer& (0+255)
  1486  063E  0086               	movwf	6
  1487  063F  0187               	clrf	7
  1488  0640  0801               	movf	1,w
  1489  0641  24EE               	fcall	_Lcd_Print_Char
  1490  0642  3001               	movlw	1
  1491  0643  0020               	movlb	0	; select bank0
  1492  0644  07A6               	addwf	initializing@j,f
  1493  0645  3000               	movlw	0
  1494  0646  3DA7               	addwfc	initializing@j+1,f
  1495  0647  0827               	movf	initializing@j+1,w
  1496  0648  3A80               	xorlw	128
  1497  0649  00FF               	movwf	127
  1498  064A  3080               	movlw	128
  1499  064B  027F               	subwf	127,w
  1500  064C  1D03               	skipz
  1501  064D  2E50               	goto	u1055
  1502  064E  3003               	movlw	3
  1503  064F  0226               	subwf	initializing@j,w
  1504  0650                     u1055:	
  1505  0650  1C03               	skipc
  1506  0651  2E3B               	goto	l1344
  1507  0652                     l1350:	
  1508                           
  1509                           ;newmain.c: 169: }
  1510                           ;newmain.c: 170: Lcd_Set_Cursor(1, 5);
  1511  0652  3005               	movlw	5
  1512  0653  0020               	movlb	0	; select bank0
  1513  0654  00A3               	movwf	??_initializing
  1514  0655  0823               	movf	??_initializing,w
  1515  0656  00F4               	movwf	Lcd_Set_Cursor@b
  1516  0657  3001               	movlw	1
  1517  0658  23CF               	fcall	_Lcd_Set_Cursor
  1518                           
  1519                           ;newmain.c: 171: Lcd_Print_String("seconds");
  1520  0659  308A               	movlw	(STR_5| (0+32768))& (0+255)
  1521  065A  2384               	fcall	_Lcd_Print_String
  1522  065B  0008               	return
  1523  065C                     __end_of_initializing:	
  1524                           
  1525                           	psect	text2
  1526  054C                     __ptext2:	
  1527 ;; *************** function _itoa *****************
  1528 ;; Defined at:
  1529 ;;		line 122 in file "newmain.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  i               2    9[COMMON] int 
  1532 ;;  b               1   11[COMMON] PTR unsigned char 
  1533 ;;		 -> Buffer(3), 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  shifter         2    0[BANK0 ] int 
  1536 ;;  p               1    2[BANK0 ] PTR unsigned char 
  1537 ;;		 -> Buffer(3), 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      PTR unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1
  1547 ;;      Params:         3       0       0
  1548 ;;      Locals:         0       3       0
  1549 ;;      Temps:          1       0       0
  1550 ;;      Totals:         4       3       0
  1551 ;;Total ram usage:        7 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    1
  1554 ;; This function calls:
  1555 ;;		___awdiv
  1556 ;;		___awmod
  1557 ;;		___wmul
  1558 ;; This function is called by:
  1559 ;;		_initializing
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _itoa
  1566  054C                     _itoa:	
  1567                           
  1568                           ;newmain.c: 123: char const digit[10] = "0123456789";
  1569                           ;newmain.c: 124: char* p = b;
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _itoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1573  054C  087B               	movf	itoa@b,w
  1574  054D  00FC               	movwf	??_itoa
  1575  054E  087C               	movf	??_itoa,w
  1576  054F  0020               	movlb	0	; select bank0
  1577  0550  00A2               	movwf	itoa@p
  1578                           
  1579                           ;newmain.c: 125: if (i < 0) {
  1580  0551  1FFA               	btfss	itoa@i+1,7
  1581  0552  2D6F               	goto	l1216
  1582                           
  1583                           ;newmain.c: 126: *p++ = '-';
  1584  0553  302D               	movlw	45
  1585  0554  00FC               	movwf	??_itoa
  1586  0555  0822               	movf	itoa@p,w
  1587  0556  0086               	movwf	6
  1588  0557  0187               	clrf	7
  1589  0558  087C               	movf	??_itoa,w
  1590  0559  0081               	movwf	1
  1591  055A  3001               	movlw	1
  1592  055B  00FC               	movwf	??_itoa
  1593  055C  087C               	movf	??_itoa,w
  1594  055D  07A2               	addwf	itoa@p,f
  1595                           
  1596                           ;newmain.c: 127: i *= -1;
  1597  055E  30FF               	movlw	255
  1598  055F  00F0               	movwf	___wmul@multiplier
  1599  0560  30FF               	movlw	255
  1600  0561  00F1               	movwf	___wmul@multiplier+1
  1601  0562  087A               	movf	itoa@i+1,w
  1602  0563  01F3               	clrf	___wmul@multiplicand+1
  1603  0564  07F3               	addwf	___wmul@multiplicand+1,f
  1604  0565  0879               	movf	itoa@i,w
  1605  0566  01F2               	clrf	___wmul@multiplicand
  1606  0567  07F2               	addwf	___wmul@multiplicand,f
  1607  0568  23B2               	fcall	___wmul
  1608  0569  0871               	movf	?___wmul+1,w
  1609  056A  01FA               	clrf	itoa@i+1
  1610  056B  07FA               	addwf	itoa@i+1,f
  1611  056C  0870               	movf	?___wmul,w
  1612  056D  01F9               	clrf	itoa@i
  1613  056E  07F9               	addwf	itoa@i,f
  1614  056F                     l1216:	
  1615                           
  1616                           ;newmain.c: 128: }
  1617                           ;newmain.c: 129: int shifter = i;
  1618  056F  087A               	movf	itoa@i+1,w
  1619  0570  0020               	movlb	0	; select bank0
  1620  0571  01A1               	clrf	itoa@shifter+1
  1621  0572  07A1               	addwf	itoa@shifter+1,f
  1622  0573  0879               	movf	itoa@i,w
  1623  0574  01A0               	clrf	itoa@shifter
  1624  0575  07A0               	addwf	itoa@shifter,f
  1625  0576                     l1218:	
  1626                           ;newmain.c: 130: do {
  1627                           
  1628                           
  1629                           ;newmain.c: 131: ++p;
  1630  0576  3001               	movlw	1
  1631  0577  00FC               	movwf	??_itoa
  1632  0578  087C               	movf	??_itoa,w
  1633  0579  07A2               	addwf	itoa@p,f
  1634                           
  1635                           ;newmain.c: 132: shifter = shifter / 10;
  1636  057A  300A               	movlw	10
  1637  057B  00F0               	movwf	___awdiv@divisor
  1638  057C  3000               	movlw	0
  1639  057D  00F1               	movwf	___awdiv@divisor+1
  1640  057E  0821               	movf	itoa@shifter+1,w
  1641  057F  01F3               	clrf	___awdiv@dividend+1
  1642  0580  07F3               	addwf	___awdiv@dividend+1,f
  1643  0581  0820               	movf	itoa@shifter,w
  1644  0582  01F2               	clrf	___awdiv@dividend
  1645  0583  07F2               	addwf	___awdiv@dividend,f
  1646  0584  249B               	fcall	___awdiv
  1647  0585  0871               	movf	?___awdiv+1,w
  1648  0586  0020               	movlb	0	; select bank0
  1649  0587  01A1               	clrf	itoa@shifter+1
  1650  0588  07A1               	addwf	itoa@shifter+1,f
  1651  0589  0870               	movf	?___awdiv,w
  1652  058A  01A0               	clrf	itoa@shifter
  1653  058B  07A0               	addwf	itoa@shifter,f
  1654                           
  1655                           ;newmain.c: 133: } while (shifter);
  1656  058C  0821               	movf	itoa@shifter+1,w
  1657  058D  0420               	iorwf	itoa@shifter,w
  1658  058E  1D03               	skipz
  1659  058F  2D76               	goto	l1218
  1660                           
  1661                           ;newmain.c: 134: *p = '\0';
  1662  0590  0822               	movf	itoa@p,w
  1663  0591  0086               	movwf	6
  1664  0592  0187               	clrf	7
  1665  0593  0181               	clrf	1
  1666  0594                     l1226:	
  1667                           ;newmain.c: 135: do {
  1668                           
  1669                           
  1670                           ;newmain.c: 136: *--p = digit[i % 10];
  1671  0594  300A               	movlw	10
  1672  0595  00F0               	movwf	___awmod@divisor
  1673  0596  3000               	movlw	0
  1674  0597  00F1               	movwf	___awmod@divisor+1
  1675  0598  087A               	movf	itoa@i+1,w
  1676  0599  01F3               	clrf	___awmod@dividend+1
  1677  059A  07F3               	addwf	___awmod@dividend+1,f
  1678  059B  0879               	movf	itoa@i,w
  1679  059C  01F2               	clrf	___awmod@dividend
  1680  059D  07F2               	addwf	___awmod@dividend,f
  1681  059E  240C               	fcall	___awmod
  1682  059F  0870               	movf	?___awmod,w
  1683  05A0  3E03               	addlw	low (itoa@digit| (0+32768))
  1684  05A1  3180               	movlp	high __stringtab
  1685  05A2  000A               	callw
  1686  05A3  3185               	pagesel	$	;select current page
  1687  05A4  00FC               	movwf	??_itoa
  1688  05A5  3001               	movlw	1
  1689  05A6  0020               	movlb	0	; select bank0
  1690  05A7  02A2               	subwf	itoa@p,f
  1691  05A8  0822               	movf	itoa@p,w
  1692  05A9  0086               	movwf	6
  1693  05AA  0187               	clrf	7
  1694  05AB  087C               	movf	??_itoa,w
  1695  05AC  0081               	movwf	1
  1696                           
  1697                           ;newmain.c: 137: i = i / 10;
  1698  05AD  300A               	movlw	10
  1699  05AE  00F0               	movwf	___awdiv@divisor
  1700  05AF  3000               	movlw	0
  1701  05B0  00F1               	movwf	___awdiv@divisor+1
  1702  05B1  087A               	movf	itoa@i+1,w
  1703  05B2  01F3               	clrf	___awdiv@dividend+1
  1704  05B3  07F3               	addwf	___awdiv@dividend+1,f
  1705  05B4  0879               	movf	itoa@i,w
  1706  05B5  01F2               	clrf	___awdiv@dividend
  1707  05B6  07F2               	addwf	___awdiv@dividend,f
  1708  05B7  249B               	fcall	___awdiv
  1709  05B8  0871               	movf	?___awdiv+1,w
  1710  05B9  01FA               	clrf	itoa@i+1
  1711  05BA  07FA               	addwf	itoa@i+1,f
  1712  05BB  0870               	movf	?___awdiv,w
  1713  05BC  01F9               	clrf	itoa@i
  1714  05BD  07F9               	addwf	itoa@i,f
  1715                           
  1716                           ;newmain.c: 138: } while (i);
  1717  05BE  087A               	movf	itoa@i+1,w
  1718  05BF  0479               	iorwf	itoa@i,w
  1719  05C0  1903               	btfsc	3,2
  1720                           
  1721                           ;newmain.c: 139: return b;
  1722                           ;	Return value of _itoa is never used
  1723  05C1  0008               	return
  1724  05C2  2D94               	goto	l1226
  1725  05C3                     __end_of_itoa:	
  1726                           
  1727                           	psect	text3
  1728  03B2                     __ptext3:	
  1729 ;; *************** function ___wmul *****************
  1730 ;; Defined at:
  1731 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\wmul.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  multiplier      2    0[COMMON] unsigned int 
  1734 ;;  multiplicand    2    2[COMMON] unsigned int 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  product         2    4[COMMON] unsigned int 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2    0[COMMON] unsigned int 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1
  1746 ;;      Params:         4       0       0
  1747 ;;      Locals:         2       0       0
  1748 ;;      Temps:          0       0       0
  1749 ;;      Totals:         6       0       0
  1750 ;;Total ram usage:        6 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_itoa
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function ___wmul
  1761  03B2                     ___wmul:	
  1762                           
  1763                           ;incstack = 0
  1764                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1765  03B2  01F4               	clrf	___wmul@product
  1766  03B3  01F5               	clrf	___wmul@product+1
  1767  03B4                     l1154:	
  1768  03B4  1C70               	btfss	___wmul@multiplier,0
  1769  03B5  2BBA               	goto	l470
  1770  03B6  0872               	movf	___wmul@multiplicand,w
  1771  03B7  07F4               	addwf	___wmul@product,f
  1772  03B8  0873               	movf	___wmul@multiplicand+1,w
  1773  03B9  3DF5               	addwfc	___wmul@product+1,f
  1774  03BA                     l470:	
  1775  03BA  3001               	movlw	1
  1776  03BB                     u865:	
  1777  03BB  35F2               	lslf	___wmul@multiplicand,f
  1778  03BC  0DF3               	rlf	___wmul@multiplicand+1,f
  1779  03BD  0B89               	decfsz	9,f
  1780  03BE  2BBB               	goto	u865
  1781  03BF  3001               	movlw	1
  1782  03C0                     u875:	
  1783  03C0  36F1               	lsrf	___wmul@multiplier+1,f
  1784  03C1  0CF0               	rrf	___wmul@multiplier,f
  1785  03C2  0B89               	decfsz	9,f
  1786  03C3  2BC0               	goto	u875
  1787  03C4  0871               	movf	___wmul@multiplier+1,w
  1788  03C5  0470               	iorwf	___wmul@multiplier,w
  1789  03C6  1D03               	skipz
  1790  03C7  2BB4               	goto	l1154
  1791  03C8  0875               	movf	___wmul@product+1,w
  1792  03C9  01F1               	clrf	?___wmul+1
  1793  03CA  07F1               	addwf	?___wmul+1,f
  1794  03CB  0874               	movf	___wmul@product,w
  1795  03CC  01F0               	clrf	?___wmul
  1796  03CD  07F0               	addwf	?___wmul,f
  1797  03CE  0008               	return
  1798  03CF                     __end_of___wmul:	
  1799                           
  1800                           	psect	text4
  1801  040C                     __ptext4:	
  1802 ;; *************** function ___awmod *****************
  1803 ;; Defined at:
  1804 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  divisor         2    0[COMMON] int 
  1807 ;;  dividend        2    2[COMMON] int 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  sign            1    6[COMMON] unsigned char 
  1810 ;;  counter         1    5[COMMON] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  2    0[COMMON] int 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1
  1820 ;;      Params:         4       0       0
  1821 ;;      Locals:         2       0       0
  1822 ;;      Temps:          1       0       0
  1823 ;;      Totals:         7       0       0
  1824 ;;Total ram usage:        7 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_itoa
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function ___awmod
  1835  040C                     ___awmod:	
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1839  040C  01F6               	clrf	___awmod@sign
  1840  040D  1FF3               	btfss	___awmod@dividend+1,7
  1841  040E  2C16               	goto	l1122
  1842  040F  09F2               	comf	___awmod@dividend,f
  1843  0410  09F3               	comf	___awmod@dividend+1,f
  1844  0411  0AF2               	incf	___awmod@dividend,f
  1845  0412  1903               	skipnz
  1846  0413  0AF3               	incf	___awmod@dividend+1,f
  1847  0414  01F6               	clrf	___awmod@sign
  1848  0415  0AF6               	incf	___awmod@sign,f
  1849  0416                     l1122:	
  1850  0416  1FF1               	btfss	___awmod@divisor+1,7
  1851  0417  2C1D               	goto	l1126
  1852  0418  09F0               	comf	___awmod@divisor,f
  1853  0419  09F1               	comf	___awmod@divisor+1,f
  1854  041A  0AF0               	incf	___awmod@divisor,f
  1855  041B  1903               	skipnz
  1856  041C  0AF1               	incf	___awmod@divisor+1,f
  1857  041D                     l1126:	
  1858  041D  0871               	movf	___awmod@divisor+1,w
  1859  041E  0470               	iorwf	___awmod@divisor,w
  1860  041F  1903               	skipnz
  1861  0420  2C44               	goto	l1144
  1862  0421  01F5               	clrf	___awmod@counter
  1863  0422  0AF5               	incf	___awmod@counter,f
  1864  0423                     l1134:	
  1865  0423  1BF1               	btfsc	___awmod@divisor+1,7
  1866  0424  2C2F               	goto	l1136
  1867  0425  3001               	movlw	1
  1868  0426                     u795:	
  1869  0426  35F0               	lslf	___awmod@divisor,f
  1870  0427  0DF1               	rlf	___awmod@divisor+1,f
  1871  0428  0B89               	decfsz	9,f
  1872  0429  2C26               	goto	u795
  1873  042A  3001               	movlw	1
  1874  042B  00F4               	movwf	??___awmod
  1875  042C  0874               	movf	??___awmod,w
  1876  042D  07F5               	addwf	___awmod@counter,f
  1877  042E  2C23               	goto	l1134
  1878  042F                     l1136:	
  1879  042F  0871               	movf	___awmod@divisor+1,w
  1880  0430  0273               	subwf	___awmod@dividend+1,w
  1881  0431  1D03               	skipz
  1882  0432  2C35               	goto	u815
  1883  0433  0870               	movf	___awmod@divisor,w
  1884  0434  0272               	subwf	___awmod@dividend,w
  1885  0435                     u815:	
  1886  0435  1C03               	skipc
  1887  0436  2C3B               	goto	l1140
  1888  0437  0870               	movf	___awmod@divisor,w
  1889  0438  02F2               	subwf	___awmod@dividend,f
  1890  0439  0871               	movf	___awmod@divisor+1,w
  1891  043A  3BF3               	subwfb	___awmod@dividend+1,f
  1892  043B                     l1140:	
  1893  043B  3001               	movlw	1
  1894  043C                     u825:	
  1895  043C  36F1               	lsrf	___awmod@divisor+1,f
  1896  043D  0CF0               	rrf	___awmod@divisor,f
  1897  043E  0B89               	decfsz	9,f
  1898  043F  2C3C               	goto	u825
  1899  0440  3001               	movlw	1
  1900  0441  02F5               	subwf	___awmod@counter,f
  1901  0442  1D03               	btfss	3,2
  1902  0443  2C2F               	goto	l1136
  1903  0444                     l1144:	
  1904  0444  0876               	movf	___awmod@sign,w
  1905  0445  1903               	btfsc	3,2
  1906  0446  2C4C               	goto	l1148
  1907  0447  09F2               	comf	___awmod@dividend,f
  1908  0448  09F3               	comf	___awmod@dividend+1,f
  1909  0449  0AF2               	incf	___awmod@dividend,f
  1910  044A  1903               	skipnz
  1911  044B  0AF3               	incf	___awmod@dividend+1,f
  1912  044C                     l1148:	
  1913  044C  0873               	movf	___awmod@dividend+1,w
  1914  044D  01F1               	clrf	?___awmod+1
  1915  044E  07F1               	addwf	?___awmod+1,f
  1916  044F  0872               	movf	___awmod@dividend,w
  1917  0450  01F0               	clrf	?___awmod
  1918  0451  07F0               	addwf	?___awmod,f
  1919  0452  0008               	return
  1920  0453                     __end_of___awmod:	
  1921                           
  1922                           	psect	text5
  1923  049B                     __ptext5:	
  1924 ;; *************** function ___awdiv *****************
  1925 ;; Defined at:
  1926 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awdiv.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  divisor         2    0[COMMON] int 
  1929 ;;  dividend        2    2[COMMON] int 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  quotient        2    7[COMMON] int 
  1932 ;;  sign            1    6[COMMON] unsigned char 
  1933 ;;  counter         1    5[COMMON] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  2    0[COMMON] int 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1
  1943 ;;      Params:         4       0       0
  1944 ;;      Locals:         4       0       0
  1945 ;;      Temps:          1       0       0
  1946 ;;      Totals:         9       0       0
  1947 ;;Total ram usage:        9 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_itoa
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function ___awdiv
  1958  049B                     ___awdiv:	
  1959                           
  1960                           ;incstack = 0
  1961                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1962  049B  01F6               	clrf	___awdiv@sign
  1963  049C  1FF1               	btfss	___awdiv@divisor+1,7
  1964  049D  2CA5               	goto	l1078
  1965  049E  09F0               	comf	___awdiv@divisor,f
  1966  049F  09F1               	comf	___awdiv@divisor+1,f
  1967  04A0  0AF0               	incf	___awdiv@divisor,f
  1968  04A1  1903               	skipnz
  1969  04A2  0AF1               	incf	___awdiv@divisor+1,f
  1970  04A3  01F6               	clrf	___awdiv@sign
  1971  04A4  0AF6               	incf	___awdiv@sign,f
  1972  04A5                     l1078:	
  1973  04A5  1FF3               	btfss	___awdiv@dividend+1,7
  1974  04A6  2CB0               	goto	l1084
  1975  04A7  09F2               	comf	___awdiv@dividend,f
  1976  04A8  09F3               	comf	___awdiv@dividend+1,f
  1977  04A9  0AF2               	incf	___awdiv@dividend,f
  1978  04AA  1903               	skipnz
  1979  04AB  0AF3               	incf	___awdiv@dividend+1,f
  1980  04AC  3001               	movlw	1
  1981  04AD  00F4               	movwf	??___awdiv
  1982  04AE  0874               	movf	??___awdiv,w
  1983  04AF  06F6               	xorwf	___awdiv@sign,f
  1984  04B0                     l1084:	
  1985  04B0  01F7               	clrf	___awdiv@quotient
  1986  04B1  01F8               	clrf	___awdiv@quotient+1
  1987  04B2  0871               	movf	___awdiv@divisor+1,w
  1988  04B3  0470               	iorwf	___awdiv@divisor,w
  1989  04B4  1903               	skipnz
  1990  04B5  2CDF               	goto	l1106
  1991  04B6  01F5               	clrf	___awdiv@counter
  1992  04B7  0AF5               	incf	___awdiv@counter,f
  1993  04B8                     l1094:	
  1994  04B8  1BF1               	btfsc	___awdiv@divisor+1,7
  1995  04B9  2CC4               	goto	l1096
  1996  04BA  3001               	movlw	1
  1997  04BB                     u695:	
  1998  04BB  35F0               	lslf	___awdiv@divisor,f
  1999  04BC  0DF1               	rlf	___awdiv@divisor+1,f
  2000  04BD  0B89               	decfsz	9,f
  2001  04BE  2CBB               	goto	u695
  2002  04BF  3001               	movlw	1
  2003  04C0  00F4               	movwf	??___awdiv
  2004  04C1  0874               	movf	??___awdiv,w
  2005  04C2  07F5               	addwf	___awdiv@counter,f
  2006  04C3  2CB8               	goto	l1094
  2007  04C4                     l1096:	
  2008  04C4  3001               	movlw	1
  2009  04C5                     u715:	
  2010  04C5  35F7               	lslf	___awdiv@quotient,f
  2011  04C6  0DF8               	rlf	___awdiv@quotient+1,f
  2012  04C7  0B89               	decfsz	9,f
  2013  04C8  2CC5               	goto	u715
  2014  04C9  0871               	movf	___awdiv@divisor+1,w
  2015  04CA  0273               	subwf	___awdiv@dividend+1,w
  2016  04CB  1D03               	skipz
  2017  04CC  2CCF               	goto	u725
  2018  04CD  0870               	movf	___awdiv@divisor,w
  2019  04CE  0272               	subwf	___awdiv@dividend,w
  2020  04CF                     u725:	
  2021  04CF  1C03               	skipc
  2022  04D0  2CD6               	goto	l1102
  2023  04D1  0870               	movf	___awdiv@divisor,w
  2024  04D2  02F2               	subwf	___awdiv@dividend,f
  2025  04D3  0871               	movf	___awdiv@divisor+1,w
  2026  04D4  3BF3               	subwfb	___awdiv@dividend+1,f
  2027  04D5  1477               	bsf	___awdiv@quotient,0
  2028  04D6                     l1102:	
  2029  04D6  3001               	movlw	1
  2030  04D7                     u735:	
  2031  04D7  36F1               	lsrf	___awdiv@divisor+1,f
  2032  04D8  0CF0               	rrf	___awdiv@divisor,f
  2033  04D9  0B89               	decfsz	9,f
  2034  04DA  2CD7               	goto	u735
  2035  04DB  3001               	movlw	1
  2036  04DC  02F5               	subwf	___awdiv@counter,f
  2037  04DD  1D03               	btfss	3,2
  2038  04DE  2CC4               	goto	l1096
  2039  04DF                     l1106:	
  2040  04DF  0876               	movf	___awdiv@sign,w
  2041  04E0  1903               	btfsc	3,2
  2042  04E1  2CE7               	goto	l1110
  2043  04E2  09F7               	comf	___awdiv@quotient,f
  2044  04E3  09F8               	comf	___awdiv@quotient+1,f
  2045  04E4  0AF7               	incf	___awdiv@quotient,f
  2046  04E5  1903               	skipnz
  2047  04E6  0AF8               	incf	___awdiv@quotient+1,f
  2048  04E7                     l1110:	
  2049  04E7  0878               	movf	___awdiv@quotient+1,w
  2050  04E8  01F1               	clrf	?___awdiv+1
  2051  04E9  07F1               	addwf	?___awdiv+1,f
  2052  04EA  0877               	movf	___awdiv@quotient,w
  2053  04EB  01F0               	clrf	?___awdiv
  2054  04EC  07F0               	addwf	?___awdiv,f
  2055  04ED  0008               	return
  2056  04EE                     __end_of___awdiv:	
  2057                           
  2058                           	psect	text6
  2059  0453                     __ptext6:	
  2060 ;; *************** function _Lcd_Start *****************
  2061 ;; Defined at:
  2062 ;;		line 80 in file "newmain.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  i               2    6[COMMON] int 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1
  2076 ;;      Params:         0       0       0
  2077 ;;      Locals:         2       0       0
  2078 ;;      Temps:          2       0       0
  2079 ;;      Totals:         4       0       0
  2080 ;;Total ram usage:        4 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    2
  2083 ;; This function calls:
  2084 ;;		_Lcd_Cmd
  2085 ;;		_Lcd_SetBit
  2086 ;; This function is called by:
  2087 ;;		_initializing
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function _Lcd_Start
  2094  0453                     _Lcd_Start:	
  2095                           
  2096                           ;newmain.c: 81: Lcd_SetBit(0x00);
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2100  0453  3000               	movlw	0
  2101  0454  239A               	fcall	_Lcd_SetBit
  2102                           
  2103                           ;newmain.c: 82: int i;
  2104                           ;newmain.c: 83: for (i = 32767; i <= 0; i--) __nop();
  2105  0455  30FF               	movlw	255
  2106  0456  00F6               	movwf	Lcd_Start@i
  2107  0457  307F               	movlw	127
  2108  0458  00F7               	movwf	Lcd_Start@i+1
  2109  0459  0877               	movf	Lcd_Start@i+1,w
  2110  045A  3A80               	xorlw	128
  2111  045B  00FF               	movwf	127
  2112  045C  3080               	movlw	128
  2113  045D  027F               	subwf	127,w
  2114  045E  1D03               	skipz
  2115  045F  2C62               	goto	u1015
  2116  0460  3001               	movlw	1
  2117  0461  0276               	subwf	Lcd_Start@i,w
  2118  0462                     u1015:	
  2119  0462  1803               	btfsc	3,0
  2120  0463  2C74               	goto	l1268
  2121  0464                     l56:	
  2122  0464  0000               	nop
  2123  0465  30FF               	movlw	255
  2124  0466  07F6               	addwf	Lcd_Start@i,f
  2125  0467  30FF               	movlw	255
  2126  0468  3DF7               	addwfc	Lcd_Start@i+1,f
  2127  0469  0877               	movf	Lcd_Start@i+1,w
  2128  046A  3A80               	xorlw	128
  2129  046B  00FF               	movwf	127
  2130  046C  3080               	movlw	128
  2131  046D  027F               	subwf	127,w
  2132  046E  1D03               	skipz
  2133  046F  2C72               	goto	u1025
  2134  0470  3001               	movlw	1
  2135  0471  0276               	subwf	Lcd_Start@i,w
  2136  0472                     u1025:	
  2137  0472  1C03               	skipc
  2138  0473  2C64               	goto	l56
  2139  0474                     l1268:	
  2140                           
  2141                           ;newmain.c: 84: Lcd_Cmd(0x03);
  2142  0474  3003               	movlw	3
  2143  0475  2372               	fcall	_Lcd_Cmd
  2144                           
  2145                           ;newmain.c: 85: _delay((unsigned long)((1)*(10000000/4000.0)));
  2146  0476  3004               	movlw	4
  2147  0477  00F5               	movwf	??_Lcd_Start+1
  2148  0478  303D               	movlw	61
  2149  0479  00F4               	movwf	??_Lcd_Start
  2150  047A                     u1317:	
  2151  047A  0BF4               	decfsz	??_Lcd_Start,f
  2152  047B  2C7A               	goto	u1317
  2153  047C  0BF5               	decfsz	??_Lcd_Start+1,f
  2154  047D  2C7A               	goto	u1317
  2155  047E  2C7F               	nop2
  2156                           
  2157                           ;newmain.c: 86: Lcd_Cmd(0x03);
  2158  047F  3003               	movlw	3
  2159  0480  2372               	fcall	_Lcd_Cmd
  2160                           
  2161                           ;newmain.c: 87: _delay((unsigned long)((1)*(10000000/4000.0)));
  2162  0481  3004               	movlw	4
  2163  0482  00F5               	movwf	??_Lcd_Start+1
  2164  0483  303D               	movlw	61
  2165  0484  00F4               	movwf	??_Lcd_Start
  2166  0485                     u1327:	
  2167  0485  0BF4               	decfsz	??_Lcd_Start,f
  2168  0486  2C85               	goto	u1327
  2169  0487  0BF5               	decfsz	??_Lcd_Start+1,f
  2170  0488  2C85               	goto	u1327
  2171  0489  2C8A               	nop2
  2172                           
  2173                           ;newmain.c: 88: Lcd_Cmd(0x03);
  2174  048A  3003               	movlw	3
  2175  048B  2372               	fcall	_Lcd_Cmd
  2176                           
  2177                           ;newmain.c: 89: Lcd_Cmd(0x02);
  2178  048C  3002               	movlw	2
  2179  048D  2372               	fcall	_Lcd_Cmd
  2180                           
  2181                           ;newmain.c: 90: Lcd_Cmd(0x02);
  2182  048E  3002               	movlw	2
  2183  048F  2372               	fcall	_Lcd_Cmd
  2184                           
  2185                           ;newmain.c: 91: Lcd_Cmd(0x08);
  2186  0490  3008               	movlw	8
  2187  0491  2372               	fcall	_Lcd_Cmd
  2188                           
  2189                           ;newmain.c: 92: Lcd_Cmd(0x00);
  2190  0492  3000               	movlw	0
  2191  0493  2372               	fcall	_Lcd_Cmd
  2192                           
  2193                           ;newmain.c: 93: Lcd_Cmd(0x0C);
  2194  0494  300C               	movlw	12
  2195  0495  2372               	fcall	_Lcd_Cmd
  2196                           
  2197                           ;newmain.c: 94: Lcd_Cmd(0x00);
  2198  0496  3000               	movlw	0
  2199  0497  2372               	fcall	_Lcd_Cmd
  2200                           
  2201                           ;newmain.c: 95: Lcd_Cmd(0x06);
  2202  0498  3006               	movlw	6
  2203  0499  2372               	fcall	_Lcd_Cmd
  2204  049A  0008               	return
  2205  049B                     __end_of_Lcd_Start:	
  2206                           
  2207                           	psect	text7
  2208  03CF                     __ptext7:	
  2209 ;; *************** function _Lcd_Set_Cursor *****************
  2210 ;; Defined at:
  2211 ;;		line 61 in file "newmain.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  a               1    wreg     unsigned char 
  2214 ;;  b               1    4[COMMON] unsigned char 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  a               1    7[COMMON] unsigned char 
  2217 ;;  temp            1   10[COMMON] unsigned char 
  2218 ;;  y               1    9[COMMON] unsigned char 
  2219 ;;  z               1    8[COMMON] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;		None               void
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, pclath, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1
  2229 ;;      Params:         1       0       0
  2230 ;;      Locals:         4       0       0
  2231 ;;      Temps:          2       0       0
  2232 ;;      Totals:         7       0       0
  2233 ;;Total ram usage:        7 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    2
  2236 ;; This function calls:
  2237 ;;		_Lcd_Cmd
  2238 ;; This function is called by:
  2239 ;;		_initializing
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _Lcd_Set_Cursor
  2246  03CF                     _Lcd_Set_Cursor:	
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2250                           ;Lcd_Set_Cursor@a stored from wreg
  2251  03CF  00F7               	movwf	Lcd_Set_Cursor@a
  2252                           
  2253                           ;newmain.c: 62: char temp;
  2254                           ;newmain.c: 63: char z = 0;
  2255  03D0  01F8               	clrf	Lcd_Set_Cursor@z
  2256                           
  2257                           ;newmain.c: 64: char y = 0;
  2258  03D1  01F9               	clrf	Lcd_Set_Cursor@y
  2259                           
  2260                           ;newmain.c: 65: if (a == 1) {
  2261  03D2  0877               	movf	Lcd_Set_Cursor@a,w
  2262  03D3  3A01               	xorlw	1
  2263  03D4  1D03               	skipz
  2264  03D5  2BEF               	goto	l1246
  2265                           
  2266                           ;newmain.c: 66: temp = 0x80 + b - 1;
  2267  03D6  0874               	movf	Lcd_Set_Cursor@b,w
  2268  03D7  3E7F               	addlw	127
  2269  03D8  00F5               	movwf	??_Lcd_Set_Cursor
  2270  03D9  0875               	movf	??_Lcd_Set_Cursor,w
  2271  03DA  00FA               	movwf	Lcd_Set_Cursor@temp
  2272                           
  2273                           ;newmain.c: 67: z = temp >> 4;
  2274  03DB  087A               	movf	Lcd_Set_Cursor@temp,w
  2275  03DC  00F5               	movwf	??_Lcd_Set_Cursor
  2276  03DD  3004               	movlw	4
  2277  03DE                     u985:	
  2278  03DE  36F5               	lsrf	??_Lcd_Set_Cursor,f
  2279  03DF  0B89               	decfsz	9,f
  2280  03E0  2BDE               	goto	u985
  2281  03E1  0875               	movf	??_Lcd_Set_Cursor,w
  2282  03E2  00F6               	movwf	??_Lcd_Set_Cursor+1
  2283  03E3  0876               	movf	??_Lcd_Set_Cursor+1,w
  2284  03E4  00F8               	movwf	Lcd_Set_Cursor@z
  2285                           
  2286                           ;newmain.c: 68: y = temp & 0x0F;
  2287  03E5  087A               	movf	Lcd_Set_Cursor@temp,w
  2288  03E6  390F               	andlw	15
  2289  03E7  00F5               	movwf	??_Lcd_Set_Cursor
  2290  03E8  0875               	movf	??_Lcd_Set_Cursor,w
  2291  03E9  00F9               	movwf	Lcd_Set_Cursor@y
  2292                           
  2293                           ;newmain.c: 69: Lcd_Cmd(z);
  2294  03EA  0878               	movf	Lcd_Set_Cursor@z,w
  2295  03EB  2372               	fcall	_Lcd_Cmd
  2296                           
  2297                           ;newmain.c: 70: Lcd_Cmd(y);
  2298  03EC  0879               	movf	Lcd_Set_Cursor@y,w
  2299  03ED  2372               	fcall	_Lcd_Cmd
  2300                           
  2301                           ;newmain.c: 71: } else if (a == 2) {
  2302  03EE  0008               	return
  2303  03EF                     l1246:	
  2304  03EF  0877               	movf	Lcd_Set_Cursor@a,w
  2305  03F0  3A02               	xorlw	2
  2306  03F1  1D03               	skipz
  2307  03F2  0008               	return
  2308                           
  2309                           ;newmain.c: 72: temp = 0xC0 + b - 1;
  2310  03F3  0874               	movf	Lcd_Set_Cursor@b,w
  2311  03F4  3EBF               	addlw	191
  2312  03F5  00F5               	movwf	??_Lcd_Set_Cursor
  2313  03F6  0875               	movf	??_Lcd_Set_Cursor,w
  2314  03F7  00FA               	movwf	Lcd_Set_Cursor@temp
  2315                           
  2316                           ;newmain.c: 73: z = temp >> 4;
  2317  03F8  087A               	movf	Lcd_Set_Cursor@temp,w
  2318  03F9  00F5               	movwf	??_Lcd_Set_Cursor
  2319  03FA  3004               	movlw	4
  2320  03FB                     u1005:	
  2321  03FB  36F5               	lsrf	??_Lcd_Set_Cursor,f
  2322  03FC  0B89               	decfsz	9,f
  2323  03FD  2BFB               	goto	u1005
  2324  03FE  0875               	movf	??_Lcd_Set_Cursor,w
  2325  03FF  00F6               	movwf	??_Lcd_Set_Cursor+1
  2326  0400  0876               	movf	??_Lcd_Set_Cursor+1,w
  2327  0401  00F8               	movwf	Lcd_Set_Cursor@z
  2328                           
  2329                           ;newmain.c: 74: y = temp & 0x0F;
  2330  0402  087A               	movf	Lcd_Set_Cursor@temp,w
  2331  0403  390F               	andlw	15
  2332  0404  00F5               	movwf	??_Lcd_Set_Cursor
  2333  0405  0875               	movf	??_Lcd_Set_Cursor,w
  2334  0406  00F9               	movwf	Lcd_Set_Cursor@y
  2335                           
  2336                           ;newmain.c: 75: Lcd_Cmd(z);
  2337  0407  0878               	movf	Lcd_Set_Cursor@z,w
  2338  0408  2372               	fcall	_Lcd_Cmd
  2339                           
  2340                           ;newmain.c: 76: Lcd_Cmd(y);
  2341  0409  0879               	movf	Lcd_Set_Cursor@y,w
  2342  040A  2372               	fcall	_Lcd_Cmd
  2343  040B  0008               	return
  2344  040C                     __end_of_Lcd_Set_Cursor:	
  2345                           
  2346                           	psect	text8
  2347  0384                     __ptext8:	
  2348 ;; *************** function _Lcd_Print_String *****************
  2349 ;; Defined at:
  2350 ;;		line 116 in file "newmain.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  a               1    wreg     PTR unsigned char 
  2353 ;;		 -> STR_14(17), STR_13(10), STR_12(15), STR_11(17), 
  2354 ;;		 -> STR_10(17), STR_9(8), STR_8(10), STR_7(8), 
  2355 ;;		 -> STR_6(9), STR_5(8), STR_4(11), STR_3(11), 
  2356 ;;		 -> STR_2(10), STR_1(9), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  a               1    9[COMMON] PTR unsigned char 
  2359 ;;		 -> STR_14(17), STR_13(10), STR_12(15), STR_11(17), 
  2360 ;;		 -> STR_10(17), STR_9(8), STR_8(10), STR_7(8), 
  2361 ;;		 -> STR_6(9), STR_5(8), STR_4(11), STR_3(11), 
  2362 ;;		 -> STR_2(10), STR_1(9), 
  2363 ;;  i               2    7[COMMON] int 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;		None               void
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1
  2373 ;;      Params:         0       0       0
  2374 ;;      Locals:         3       0       0
  2375 ;;      Temps:          0       0       0
  2376 ;;      Totals:         3       0       0
  2377 ;;Total ram usage:        3 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    2
  2380 ;; This function calls:
  2381 ;;		_Lcd_Print_Char
  2382 ;; This function is called by:
  2383 ;;		_initializing
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _Lcd_Print_String
  2390  0384                     _Lcd_Print_String:	
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in _Lcd_Print_String: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2394                           ;Lcd_Print_String@a stored from wreg
  2395  0384  00F9               	movwf	Lcd_Print_String@a
  2396                           
  2397                           ;newmain.c: 117: int i;
  2398                           ;newmain.c: 118: for (i = 0; a[i] != '\0'; i++)
  2399  0385  01F7               	clrf	Lcd_Print_String@i
  2400  0386  01F8               	clrf	Lcd_Print_String@i+1
  2401  0387                     l1296:	
  2402  0387  0879               	movf	Lcd_Print_String@a,w
  2403  0388  0777               	addwf	Lcd_Print_String@i,w
  2404  0389  3180               	movlp	high __stringtab
  2405  038A  000A               	callw
  2406  038B  3183               	pagesel	$	;select current page
  2407  038C  3800               	iorlw	0
  2408  038D  1903               	btfsc	3,2
  2409  038E  0008               	return
  2410                           
  2411                           ;newmain.c: 119: Lcd_Print_Char(a[i]);
  2412  038F  0879               	movf	Lcd_Print_String@a,w
  2413  0390  0777               	addwf	Lcd_Print_String@i,w
  2414  0391  3180               	movlp	high __stringtab
  2415  0392  000A               	callw
  2416  0393  3183               	pagesel	$	;select current page
  2417  0394  24EE               	fcall	_Lcd_Print_Char
  2418  0395  3001               	movlw	1
  2419  0396  07F7               	addwf	Lcd_Print_String@i,f
  2420  0397  3000               	movlw	0
  2421  0398  3DF8               	addwfc	Lcd_Print_String@i+1,f
  2422  0399  2B87               	goto	l1296
  2423  039A                     __end_of_Lcd_Print_String:	
  2424                           
  2425                           	psect	text9
  2426  04EE                     __ptext9:	
  2427 ;; *************** function _Lcd_Print_Char *****************
  2428 ;; Defined at:
  2429 ;;		line 98 in file "newmain.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  data            1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  data            1    4[COMMON] unsigned char 
  2434 ;;  i               2    5[COMMON] int 
  2435 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  2436 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;		None               void
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1
  2446 ;;      Params:         0       0       0
  2447 ;;      Locals:         5       0       0
  2448 ;;      Temps:          1       0       0
  2449 ;;      Totals:         6       0       0
  2450 ;;Total ram usage:        6 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    1
  2453 ;; This function calls:
  2454 ;;		_Lcd_SetBit
  2455 ;; This function is called by:
  2456 ;;		_Lcd_Print_String
  2457 ;;		_initializing
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _Lcd_Print_Char
  2464  04EE                     _Lcd_Print_Char:	
  2465                           
  2466                           ;incstack = 0
  2467                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2468                           ;Lcd_Print_Char@data stored from wreg
  2469  04EE  00F4               	movwf	Lcd_Print_Char@data
  2470                           
  2471                           ;newmain.c: 100: char Lower_Nibble;
  2472                           ;newmain.c: 101: char Upper_Nibble;
  2473                           ;newmain.c: 102: Lower_Nibble = data & 0x0F;
  2474  04EF  0874               	movf	Lcd_Print_Char@data,w
  2475  04F0  390F               	andlw	15
  2476  04F1  00F1               	movwf	??_Lcd_Print_Char
  2477  04F2  0871               	movf	??_Lcd_Print_Char,w
  2478  04F3  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  2479                           
  2480                           ;newmain.c: 103: Upper_Nibble = data & 0xF0;
  2481  04F4  0874               	movf	Lcd_Print_Char@data,w
  2482  04F5  39F0               	andlw	240
  2483  04F6  00F1               	movwf	??_Lcd_Print_Char
  2484  04F7  0871               	movf	??_Lcd_Print_Char,w
  2485  04F8  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  2486                           
  2487                           ;newmain.c: 104: PORTAbits.RA2 = 1;
  2488  04F9  0020               	movlb	0	; select bank0
  2489  04FA  150C               	bsf	12,2	;volatile
  2490                           
  2491                           ;newmain.c: 105: Lcd_SetBit(Upper_Nibble >> 4);
  2492  04FB  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  2493  04FC  00F1               	movwf	??_Lcd_Print_Char
  2494  04FD  3004               	movlw	4
  2495  04FE                     u895:	
  2496  04FE  36F1               	lsrf	??_Lcd_Print_Char,f
  2497  04FF  0B89               	decfsz	9,f
  2498  0500  2CFE               	goto	u895
  2499  0501  0871               	movf	??_Lcd_Print_Char,w
  2500  0502  239A               	fcall	_Lcd_SetBit
  2501                           
  2502                           ;newmain.c: 106: PORTAbits.RA4 = 1;
  2503  0503  0020               	movlb	0	; select bank0
  2504  0504  160C               	bsf	12,4	;volatile
  2505                           
  2506                           ;newmain.c: 107: int i;
  2507                           ;newmain.c: 108: for (i = 32767; i <= 0; i--) __nop();
  2508  0505  30FF               	movlw	255
  2509  0506  00F5               	movwf	Lcd_Print_Char@i
  2510  0507  307F               	movlw	127
  2511  0508  00F6               	movwf	Lcd_Print_Char@i+1
  2512  0509  0876               	movf	Lcd_Print_Char@i+1,w
  2513  050A  3A80               	xorlw	128
  2514  050B  00FF               	movwf	127
  2515  050C  3080               	movlw	128
  2516  050D  027F               	subwf	127,w
  2517  050E  1D03               	skipz
  2518  050F  2D12               	goto	u905
  2519  0510  3001               	movlw	1
  2520  0511  0275               	subwf	Lcd_Print_Char@i,w
  2521  0512                     u905:	
  2522  0512  1803               	btfsc	3,0
  2523  0513  2D24               	goto	l62
  2524  0514                     l61:	
  2525  0514  0000               	nop
  2526  0515  30FF               	movlw	255
  2527  0516  07F5               	addwf	Lcd_Print_Char@i,f
  2528  0517  30FF               	movlw	255
  2529  0518  3DF6               	addwfc	Lcd_Print_Char@i+1,f
  2530  0519  0876               	movf	Lcd_Print_Char@i+1,w
  2531  051A  3A80               	xorlw	128
  2532  051B  00FF               	movwf	127
  2533  051C  3080               	movlw	128
  2534  051D  027F               	subwf	127,w
  2535  051E  1D03               	skipz
  2536  051F  2D22               	goto	u915
  2537  0520  3001               	movlw	1
  2538  0521  0275               	subwf	Lcd_Print_Char@i,w
  2539  0522                     u915:	
  2540  0522  1C03               	skipc
  2541  0523  2D14               	goto	l61
  2542  0524                     l62:	
  2543                           
  2544                           ;newmain.c: 109: PORTAbits.RA4 = 0;
  2545  0524  0020               	movlb	0	; select bank0
  2546  0525  120C               	bcf	12,4	;volatile
  2547                           
  2548                           ;newmain.c: 110: Lcd_SetBit(Lower_Nibble);
  2549  0526  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  2550  0527  239A               	fcall	_Lcd_SetBit
  2551                           
  2552                           ;newmain.c: 111: PORTAbits.RA4 = 1;
  2553  0528  0020               	movlb	0	; select bank0
  2554  0529  160C               	bsf	12,4	;volatile
  2555                           
  2556                           ;newmain.c: 112: for (i = 32767; i <= 0; i--) __nop();
  2557  052A  30FF               	movlw	255
  2558  052B  00F5               	movwf	Lcd_Print_Char@i
  2559  052C  307F               	movlw	127
  2560  052D  00F6               	movwf	Lcd_Print_Char@i+1
  2561  052E  0876               	movf	Lcd_Print_Char@i+1,w
  2562  052F  3A80               	xorlw	128
  2563  0530  00FF               	movwf	127
  2564  0531  3080               	movlw	128
  2565  0532  027F               	subwf	127,w
  2566  0533  1D03               	skipz
  2567  0534  2D37               	goto	u925
  2568  0535  3001               	movlw	1
  2569  0536  0275               	subwf	Lcd_Print_Char@i,w
  2570  0537                     u925:	
  2571  0537  1803               	btfsc	3,0
  2572  0538  2D49               	goto	l64
  2573  0539                     l63:	
  2574  0539  0000               	nop
  2575  053A  30FF               	movlw	255
  2576  053B  07F5               	addwf	Lcd_Print_Char@i,f
  2577  053C  30FF               	movlw	255
  2578  053D  3DF6               	addwfc	Lcd_Print_Char@i+1,f
  2579  053E  0876               	movf	Lcd_Print_Char@i+1,w
  2580  053F  3A80               	xorlw	128
  2581  0540  00FF               	movwf	127
  2582  0541  3080               	movlw	128
  2583  0542  027F               	subwf	127,w
  2584  0543  1D03               	skipz
  2585  0544  2D47               	goto	u935
  2586  0545  3001               	movlw	1
  2587  0546  0275               	subwf	Lcd_Print_Char@i,w
  2588  0547                     u935:	
  2589  0547  1C03               	skipc
  2590  0548  2D39               	goto	l63
  2591  0549                     l64:	
  2592                           
  2593                           ;newmain.c: 113: PORTAbits.RA4 = 0;
  2594  0549  0020               	movlb	0	; select bank0
  2595  054A  120C               	bcf	12,4	;volatile
  2596  054B  0008               	return
  2597  054C                     __end_of_Lcd_Print_Char:	
  2598                           
  2599                           	psect	text10
  2600  036D                     __ptext10:	
  2601 ;; *************** function _Lcd_Clear *****************
  2602 ;; Defined at:
  2603 ;;		line 56 in file "newmain.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;		None               void
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1
  2617 ;;      Params:         0       0       0
  2618 ;;      Locals:         0       0       0
  2619 ;;      Temps:          0       0       0
  2620 ;;      Totals:         0       0       0
  2621 ;;Total ram usage:        0 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    2
  2624 ;; This function calls:
  2625 ;;		_Lcd_Cmd
  2626 ;; This function is called by:
  2627 ;;		_initializing
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _Lcd_Clear
  2634  036D                     _Lcd_Clear:	
  2635                           
  2636                           ;newmain.c: 57: Lcd_Cmd(0);
  2637                           
  2638                           ;incstack = 0
  2639                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2640  036D  3000               	movlw	0
  2641  036E  2372               	fcall	_Lcd_Cmd
  2642                           
  2643                           ;newmain.c: 58: Lcd_Cmd(1);
  2644  036F  3001               	movlw	1
  2645  0370  2372               	fcall	_Lcd_Cmd
  2646  0371  0008               	return
  2647  0372                     __end_of_Lcd_Clear:	
  2648                           
  2649                           	psect	text11
  2650  0372                     __ptext11:	
  2651 ;; *************** function _Lcd_Cmd *****************
  2652 ;; Defined at:
  2653 ;;		line 48 in file "newmain.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  a               1    wreg     unsigned char 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  a               1    3[COMMON] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;		None               void
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1
  2667 ;;      Params:         0       0       0
  2668 ;;      Locals:         1       0       0
  2669 ;;      Temps:          2       0       0
  2670 ;;      Totals:         3       0       0
  2671 ;;Total ram usage:        3 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		_Lcd_SetBit
  2676 ;; This function is called by:
  2677 ;;		_Lcd_Clear
  2678 ;;		_Lcd_Set_Cursor
  2679 ;;		_Lcd_Start
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           
  2684                           ;psect for function _Lcd_Cmd
  2685  0372                     _Lcd_Cmd:	
  2686                           
  2687                           ;incstack = 0
  2688                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2689                           ;Lcd_Cmd@a stored from wreg
  2690  0372  00F3               	movwf	Lcd_Cmd@a
  2691                           
  2692                           ;newmain.c: 49: PORTAbits.RA2 = 0;
  2693  0373  0020               	movlb	0	; select bank0
  2694  0374  110C               	bcf	12,2	;volatile
  2695                           
  2696                           ;newmain.c: 50: Lcd_SetBit(a);
  2697  0375  0873               	movf	Lcd_Cmd@a,w
  2698  0376  239A               	fcall	_Lcd_SetBit
  2699                           
  2700                           ;newmain.c: 51: PORTAbits.RA4 = 1;
  2701  0377  0020               	movlb	0	; select bank0
  2702  0378  160C               	bsf	12,4	;volatile
  2703                           
  2704                           ;newmain.c: 52: _delay((unsigned long)((2)*(10000000/4000.0)));
  2705  0379  3007               	movlw	7
  2706  037A  00F2               	movwf	??_Lcd_Cmd+1
  2707  037B  307D               	movlw	125
  2708  037C  00F1               	movwf	??_Lcd_Cmd
  2709  037D                     u1337:	
  2710  037D  0BF1               	decfsz	??_Lcd_Cmd,f
  2711  037E  2B7D               	goto	u1337
  2712  037F  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2713  0380  2B7D               	goto	u1337
  2714                           
  2715                           ;newmain.c: 53: PORTAbits.RA4 = 0;
  2716  0381  0020               	movlb	0	; select bank0
  2717  0382  120C               	bcf	12,4	;volatile
  2718  0383  0008               	return
  2719  0384                     __end_of_Lcd_Cmd:	
  2720                           
  2721                           	psect	text12
  2722  039A                     __ptext12:	
  2723 ;; *************** function _Lcd_SetBit *****************
  2724 ;; Defined at:
  2725 ;;		line 26 in file "newmain.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  data_bit        1    wreg     unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  data_bit        1    0[COMMON] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;		None               void
  2732 ;; Registers used:
  2733 ;;		wreg
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1
  2739 ;;      Params:         0       0       0
  2740 ;;      Locals:         1       0       0
  2741 ;;      Temps:          0       0       0
  2742 ;;      Totals:         1       0       0
  2743 ;;Total ram usage:        1 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_Lcd_Cmd
  2749 ;;		_Lcd_Start
  2750 ;;		_Lcd_Print_Char
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _Lcd_SetBit
  2756  039A                     _Lcd_SetBit:	
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _Lcd_SetBit: [wreg]
  2760                           ;Lcd_SetBit@data_bit stored from wreg
  2761  039A  00F0               	movwf	Lcd_SetBit@data_bit
  2762                           
  2763                           ;newmain.c: 27: if (data_bit & 1)
  2764  039B  1C70               	btfss	Lcd_SetBit@data_bit,0
  2765  039C  2BA0               	goto	l33
  2766                           
  2767                           ;newmain.c: 28: PORTBbits.RB4 = 1;
  2768  039D  0020               	movlb	0	; select bank0
  2769  039E  160D               	bsf	13,4	;volatile
  2770  039F  2BA2               	goto	l1058
  2771  03A0                     l33:	
  2772                           
  2773                           ;newmain.c: 29: else
  2774                           ;newmain.c: 30: PORTBbits.RB4 = 0;
  2775  03A0  0020               	movlb	0	; select bank0
  2776  03A1  120D               	bcf	13,4	;volatile
  2777  03A2                     l1058:	
  2778                           
  2779                           ;newmain.c: 32: if (data_bit & 2)
  2780  03A2  1CF0               	btfss	Lcd_SetBit@data_bit,1
  2781  03A3  2BA6               	goto	l35
  2782                           
  2783                           ;newmain.c: 33: PORTBbits.RB5 = 1;
  2784  03A4  168D               	bsf	13,5	;volatile
  2785  03A5  2BA7               	goto	l1062
  2786  03A6                     l35:	
  2787                           
  2788                           ;newmain.c: 34: else
  2789                           ;newmain.c: 35: PORTBbits.RB5 = 0;
  2790  03A6  128D               	bcf	13,5	;volatile
  2791  03A7                     l1062:	
  2792                           
  2793                           ;newmain.c: 37: if (data_bit & 4)
  2794  03A7  1D70               	btfss	Lcd_SetBit@data_bit,2
  2795  03A8  2BAB               	goto	l37
  2796                           
  2797                           ;newmain.c: 38: PORTBbits.RB6 = 1;
  2798  03A9  170D               	bsf	13,6	;volatile
  2799  03AA  2BAC               	goto	l1066
  2800  03AB                     l37:	
  2801                           
  2802                           ;newmain.c: 39: else
  2803                           ;newmain.c: 40: PORTBbits.RB6 = 0;
  2804  03AB  130D               	bcf	13,6	;volatile
  2805  03AC                     l1066:	
  2806                           
  2807                           ;newmain.c: 42: if (data_bit & 8)
  2808  03AC  1DF0               	btfss	Lcd_SetBit@data_bit,3
  2809  03AD  2BB0               	goto	l39
  2810                           
  2811                           ;newmain.c: 43: PORTBbits.RB7 = 1;
  2812  03AE  178D               	bsf	13,7	;volatile
  2813  03AF  0008               	return
  2814  03B0                     l39:	
  2815                           
  2816                           ;newmain.c: 44: else
  2817                           ;newmain.c: 45: PORTBbits.RB7 = 0;
  2818  03B0  138D               	bcf	13,7	;volatile
  2819  03B1  0008               	return
  2820  03B2                     __end_of_Lcd_SetBit:	
  2821  007E                     btemp	set	126	;btemp
  2822  007E                     wtemp	set	126
  2823  007E                     wtemp0	set	126
  2824  0080                     wtemp1	set	128
  2825  0082                     wtemp2	set	130
  2826  0084                     wtemp3	set	132
  2827  0086                     wtemp4	set	134
  2828  0088                     wtemp5	set	136
  2829  007F                     wtemp6	set	127
  2830  007E                     ttemp	set	126
  2831  007E                     ttemp0	set	126
  2832  0081                     ttemp1	set	129
  2833  0084                     ttemp2	set	132
  2834  0087                     ttemp3	set	135
  2835  007F                     ttemp4	set	127
  2836  007E                     ltemp	set	126
  2837  007E                     ltemp0	set	126
  2838  0082                     ltemp1	set	130
  2839  0086                     ltemp2	set	134
  2840  0080                     ltemp3	set	128


Data Sizes:
    Strings     133
    Constant    10
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     13      20
    BANK1            32      0       0

Pointer List with Targets:

    sp__itoa	PTR unsigned char  size(1) Largest target is 3
		 -> Buffer(BANK0[3]), 

    itoa@b	PTR unsigned char  size(1) Largest target is 3
		 -> Buffer(BANK0[3]), 

    itoa@p	PTR unsigned char  size(1) Largest target is 3
		 -> Buffer(BANK0[3]), 

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_14(CODE[17]), STR_13(CODE[10]), STR_12(CODE[15]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[8]), STR_8(CODE[10]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[11]), STR_3(CODE[11]), 
		 -> STR_2(CODE[10]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _initializing->_itoa
    _itoa->___awdiv
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    _main->_initializing
    _initializing->_itoa

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    9294
                                              8 BANK0      5     5      0
                          _Lcd_Clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                       _initializing
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _initializing                                         5     5      0    4579
                                              3 BANK0      5     5      0
                          _Lcd_Clear
                     _Lcd_Print_Char
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                               _itoa
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     4      3    1813
                                              9 COMMON     4     1      3
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     4     4      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1336
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_String                                     3     3      0     738
                                              7 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Print_Char                                       6     6      0     270
                                              1 COMMON     6     6      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (3) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_Char
     _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   _initializing
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_SetBit
     _Lcd_Print_Char
       _Lcd_SetBit
     _Lcd_Print_String
       _Lcd_Print_Char
         _Lcd_SetBit
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_SetBit
     _Lcd_Start
       _Lcd_Cmd
         _Lcd_SetBit
       _Lcd_SetBit
     _itoa
       ___awdiv
       ___awmod
       ___wmul
   _itoa
     ___awdiv
     ___awmod
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      21       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      14       6       25.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      21       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Sep 01 21:00:39 2020

               __CFG_CP$OFF 0000                          l33 03A0                          l35 03A6  
                        l37 03AB                          l61 0514                          l62 0524  
                        l39 03B0                          l63 0539                          l64 0549  
                        l56 0464                ___awdiv@sign 0076         ___wmul@multiplicand 0072  
               __CFG_LVP$ON 0000                         l105 077B                         l470 03BA  
                       u715 04C5                         u725 04CF                         u735 04D7  
                       u815 0435                         u905 0512                         u825 043C  
                       u915 0522                         u925 0537                         u935 0547  
                       u695 04BB                         u865 03BB                         u795 0426  
                       u875 03C0                         u895 04FE                         u985 03DE  
              ___awmod@sign 0076                __CFG_BORV$LO 0000                         wreg 0009  
                      l1110 04E7                        l1102 04D6                        l1106 04DF  
                      l1122 0416                        l1140 043B                        l1062 03A7  
                      l1134 0423                        l1126 041D                        l1136 042F  
                      l1144 0444                        l1216 056F                        l1066 03AC  
                      l1058 03A2                        l1154 03B4                        l1226 0594  
                      l1218 0576                        l1084 04B0                        l1148 044C  
                      l1412 06B8                        l1246 03EF                        l1094 04B8  
                      l1078 04A5                        l1350 0652                        l1096 04C4  
                      l1344 063B                        l1520 07BB                        l1504 0796  
                      l1424 06E2                        l1418 06CF                        l1268 0474  
                      l1452 071A                        l1436 06F4                        l1540 066F  
                      l1526 07D2                        l1296 0387                        l1536 07DB  
                      l1464 0744                        l1538 07E9                        l1482 076E  
                      l1458 0731                        l1394 0691                        STR_1 0081  
                      STR_2 0064                        STR_3 004F                        STR_4 004F  
                      STR_5 008A                        STR_6 0078                        STR_7 008A  
                      STR_8 005A                        STR_9 008A                        u1005 03FB  
                      u1015 0462                        u1025 0472                        u1045 0639  
                      u1125 0718                        u1055 0650                        u1135 072F  
                      u1225 0679                        u1307 0614                        u1075 0686  
                      u1317 047A                        u1165 0763                        u1237 06DD  
                      u1085 06B6                        u1327 0485                        u1247 073F  
                      u1095 06CD                        u1337 037D                        u1185 07B9  
                      u1257 074F                        u1267 07EF                        u1195 07D0  
                      u1277 05D2                        u1287 05E8                        u1297 05FE  
              __CFG_WRT$OFF 0000                        _main 065C                        _itoa 054C  
                      fsr1h 0007                        indf1 0001                        fsr1l 0006  
                      btemp 007E                        ltemp 007E                        start 0001  
                      ttemp 007E                        wtemp 007E          Lcd_Print_Char@data 0074  
           __end_of_Lcd_Cmd 0384                  _Lcd_SetBit 039A                       ?_main 0070  
                     ?_itoa 0079             __end_of___awdiv 04EE                       STR_10 000D  
                     STR_11 002F                       STR_12 0040                       STR_13 006E  
                     STR_14 001E               __CFG_WDTE$OFF 0000             __end_of___awmod 0453  
           ___awdiv@divisor 0070             ___awdiv@counter 0075     __size_of_Lcd_Set_Cursor 003D  
                     _TRISA 008C                       _TRISB 008D                       _check 002D  
                     main@j 002B                       itoa@b 007B              __CFG_BOREN$OFF 0000  
                     itoa@i 0079                       itoa@p 0022                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
 __size_of_Lcd_Print_String 0016                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F     __size_of_Lcd_Print_Char 005E  
            __CFG_MCLRE$OFF 0000             __initialization 07F7                __end_of_main 07F7  
              __end_of_itoa 05C3              __CFG_LPBOR$OFF 0000                      ??_main 0028  
                    ??_itoa 007C          __size_of_Lcd_Clear 0005          __size_of_Lcd_Start 0048  
          ___awdiv@dividend 0072                      _ANSELA 018C                      _ANSELB 018D  
                    _ANSELC 018E                      _OSCCON 0099                   ??_Lcd_Cmd 0071  
                    _Buffer 0031              __CFG_PWRTE$OFF 0000               ?_initializing 0070  
                    ___wmul 03B2                   ??___awdiv 0074              __CFG_STVREN$ON 0000  
                 ??___awmod 0074                      _contor 002F                 ?_Lcd_SetBit 0070  
          ___awdiv@quotient 0077             ___awmod@divisor 0070             ___awmod@counter 0075  
               itoa@shifter 0020             Lcd_Set_Cursor@a 0077             Lcd_Set_Cursor@b 0074  
           Lcd_Set_Cursor@y 0079             Lcd_Set_Cursor@z 0078     __end_of__initialization 07FE  
         __end_of_Lcd_Clear 0372           __end_of_Lcd_Start 049B              ??_initializing 0023  
            __pcstackCOMMON 0070              _Lcd_Set_Cursor 03CF                  __pbssBANK0 002D  
          _Lcd_Print_String 0384         __size_of_Lcd_SetBit 0018              _Lcd_Print_Char 04EE  
                __pmaintext 065C                     ?___wmul 0070          Lcd_SetBit@data_bit 0070  
    __end_of_Lcd_Set_Cursor 040C                  __stringtab 0002             Lcd_Print_Char@i 0075  
                   _Lcd_Cmd 0372      __end_of_Lcd_Print_Char 054C                     ___awdiv 049B  
                   ___awmod 040C             __size_of___wmul 001D             ?_Lcd_Set_Cursor 0074  
                   __ptext1 05C3                     __ptext2 054C                     __ptext3 03B2  
                   __ptext4 040C                     __ptext5 049B                     __ptext6 0453  
                   __ptext7 03CF                     __ptext8 0384                     __ptext9 04EE  
          ___awmod@dividend 0072        __end_of_initializing 065C        end_of_initialization 07FE  
           ?_Lcd_Print_Char 0070                ??_Lcd_SetBit 0070                   _PORTAbits 000C  
                 _PORTBbits 000D                   _PORTCbits 000E            __CFG_FOSC$INTOSC 0000  
                 _TRISCbits 008E          __end_of_Lcd_SetBit 03B2           __end_ofitoa@digit 000D  
                 _Lcd_Clear 036D                   _Lcd_Start 0453              __end_of___wmul 03CF  
  __end_of_Lcd_Print_String 039A         start_initialization 07F7           Lcd_Print_String@a 0079  
         Lcd_Print_String@i 0077                  ?_Lcd_Clear 0070                    ??___wmul 0074  
                ?_Lcd_Start 0070  Lcd_Print_Char@Lower_Nibble 0072       __size_of_initializing 0099  
                 ___latbits 0000               __pcstackBANK0 0020         __end_of__stringdata 0092  
                  ?_Lcd_Cmd 0070                _initializing 05C3            ??_Lcd_Set_Cursor 0075  
                  ?___awdiv 0070                    ?___awmod 0070                   __pstrings 0002  
          ??_Lcd_Print_Char 0071              ___wmul@product 0074                    Lcd_Cmd@a 0073  
               ??_Lcd_Clear 0074                 ??_Lcd_Start 0074                 __stringdata 000D  
         ___wmul@multiplier 0070            __size_of_Lcd_Cmd 0012                   itoa@digit 0003  
          __size_of___awdiv 0053            __size_of___awmod 0047          __end_of__stringtab 0003  
         ?_Lcd_Print_String 0070          ??_Lcd_Print_String 0077                    __ptext10 036D  
                  __ptext11 0372                    __ptext12 039A               __size_of_main 019B  
             __size_of_itoa 0077  Lcd_Print_Char@Upper_Nibble 0073           __CFG_CLKOUTEN$OFF 0000  
             initializing@j 0026          Lcd_Set_Cursor@temp 007A                  Lcd_Start@i 0076  
